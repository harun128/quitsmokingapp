{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../../components/UI/Text\"));\n\nvar _HealthConditions = require(\"../../config/HealthConditions\");\n\nvar _reactNativeCircularProgress = require(\"react-native-circular-progress\");\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _DateDifferences = _interopRequireDefault(require(\"../../utils/DateDifferences\"));\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Health\\\\HealthConditionScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HealthConditionScreen = function (_React$Component) {\n  (0, _inherits2.default)(HealthConditionScreen, _React$Component);\n\n  var _super = _createSuper(HealthConditionScreen);\n\n  function HealthConditionScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, HealthConditionScreen);\n    _this = _super.call(this, props);\n\n    _this.ticktock = function () {\n      if (_this.state.percentage < 100) {\n        var diff = new Date(Date.now()).getTime() - (new Date(_this.props.date).getTime() + _this.state.condition.time);\n\n        if (diff < 0) {\n          var different = Math.abs(diff) - 1000;\n          var df = new _DateDifferences.default(different);\n\n          _this.setState({\n            elapsedDays: df.elapsedDays < 0 ? 0 : df.elapsedDays,\n            elapsedHours: df.elapsedHours < 0 ? 0 : df.elapsedHours,\n            elapsedMinutes: df.elapsedMinutes < 0 ? 0 : df.elapsedMinutes,\n            elapsedSeconds: df.elapsedSeconds < 0 ? 0 : df.elapsedSeconds\n          });\n        }\n      } else {\n        clearInterval(_this.timer);\n      }\n    };\n\n    _this.props.navigation.setOptions({\n      headerTitle: \"\",\n      headerStyle: {\n        backgroundColor: '#E84C3D',\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 45\n      },\n      headerTitleStyle: {\n        fontWeight: 'normal',\n        fontSize: 17,\n        alignSelf: 'center'\n      },\n      headerTintColor: '#fff',\n      headerRight: function headerRight() {\n        return _react.default.createElement(_Box.default, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        });\n      }\n    });\n\n    _this.state = {\n      id: _this.props.route.params.id,\n      condition: {},\n      percentage: 0,\n      tickTockSecond: 0,\n      elapsedDays: 0,\n      elapsedHours: 0,\n      elapsedMinutes: 0,\n      elapsedSeconds: 0\n    };\n\n    _reactNative.StatusBar.setBarStyle(\"light-content\");\n\n    _reactNative.StatusBar.setBackgroundColor(\"#E84C3D\");\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(HealthConditionScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this,\n          _this$state$condition;\n\n      _HealthConditions.HealthConditions.forEach(function (value) {\n        if (value.id == _this2.state.id) {\n          _this2.setState({\n            condition: value\n          });\n\n          _this2.state.condition = value;\n          return;\n        }\n      });\n\n      var quitDate = new Date(this.props.date).getTime();\n      var time = (_this$state$condition = this.state.condition) == null ? void 0 : _this$state$condition.time;\n      var now = new Date(Date.now()).getTime();\n      var diff = now - (time + quitDate);\n\n      if (diff < 0) {\n        var percentage = 100 - 100 * Math.abs(diff) / time;\n        this.setState({\n          percentage: percentage\n        });\n      } else {\n        this.state.percentage = 100;\n      }\n\n      this.timer = setInterval(function () {\n        return _this2.ticktock();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state;\n\n      return _react.default.createElement(_Box.default, {\n        flex: 1,\n        alignItems: \"center\",\n        flexDirection: 'row',\n        justifyContent: 'center',\n        bg: '#E84C3D',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: \"column\",\n        alignItems: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNativeCircularProgress.AnimatedCircularProgress, {\n        ref: function ref(_ref) {\n          return _this3.circularProgress = _ref;\n        },\n        size: 150,\n        width: 8,\n        fill: (_this$state = this.state) == null ? void 0 : _this$state.percentage,\n        tintColor: \"white\",\n        backgroundColor: \"#353D29\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, function (fill) {\n        return _react.default.createElement(_Text.default, {\n          fontSize: 2,\n          color: 'white',\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }\n        }, (100 * fill / 100).toFixed(1), \"%\");\n      }), _react.default.createElement(_Text.default, {\n        color: 'white',\n        mt: 4,\n        fontSize: 15,\n        textAlign: 'center',\n        width: '100%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, this.state.condition.condition), _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: .75,\n        style: {\n          minWidth: '87%',\n          marginTop: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_Box.default, {\n        mt: 20,\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_Box.default, {\n        borderTopLeftRadius: 7,\n        borderTopRightRadius: 7,\n        height: 35,\n        flexDirection: 'row',\n        bg: '#34495e',\n        alignItems: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_icons.Clock, {\n        width: 25,\n        style: {\n          marginLeft: 10\n        },\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 10,\n        textAlign: 'center',\n        color: \"white\",\n        fontWeight: 'normal',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, _18n.default.t(\"health.remaining_time\")))), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        py: 1,\n        bg: 'white',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: '#34495e',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_Text.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, this.state.elapsedDays), _react.default.createElement(_Text.default, {\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }, _18n.default.t(\"day\"))), _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: '#34495e',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_Text.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }, this.state.elapsedHours), _react.default.createElement(_Text.default, {\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, _18n.default.t(\"hour\"))), _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: '#34495e',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_Text.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, this.state.elapsedMinutes), _react.default.createElement(_Text.default, {\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }\n      }, _18n.default.t(\"minute\"))), _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_Text.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }\n      }, this.state.elapsedSeconds), _react.default.createElement(_Text.default, {\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }\n      }, _18n.default.t(\"second\")))))));\n    }\n  }]);\n  return HealthConditionScreen;\n}(_react.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var ui = state.ui;\n  return {\n    date: ui.date,\n    wasteTime: ui.wasteTime,\n    smokingCountPerDay: ui.smokingCountPerDay,\n    countCigaretteInPocket: ui.countCigaretteInPocket,\n    price: ui.price\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(HealthConditionScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Health/HealthConditionScreen.js"],"names":["HealthConditionScreen","props","ticktock","state","percentage","diff","Date","now","getTime","date","condition","time","different","Math","abs","df","DateDifferences","setState","elapsedDays","elapsedHours","elapsedMinutes","elapsedSeconds","clearInterval","timer","navigation","setOptions","headerTitle","headerStyle","backgroundColor","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","alignSelf","headerTintColor","headerRight","id","route","params","tickTockSecond","StatusBar","setBarStyle","setBackgroundColor","HealthConditions","forEach","value","quitDate","setInterval","ref","circularProgress","fill","toFixed","minWidth","marginTop","marginLeft","I18n","t","React","Component","mapStateToProps","ui","wasteTime","smokingCountPerDay","countCigaretteInPocket","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity,StatusBar} from 'react-native';\r\nimport Box from \"../../components/UI/Box\";\r\nimport Text from \"../../components/UI/Text\";\r\nimport {HealthConditions} from \"../../config/HealthConditions\";\r\nimport {AnimatedCircularProgress} from \"react-native-circular-progress\";\r\nimport {Clock} from \"../../assets/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport DateDifferences from \"../../utils/DateDifferences\";\r\nimport I18n from \"./../../lang/_18n\";\r\n\r\nclass HealthConditionScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.navigation.setOptions({\r\n                headerTitle:\"\",\r\n                headerStyle : {\r\n                    backgroundColor: '#E84C3D',\r\n                    elevation: 0,       //remove shadow on Android\r\n                    shadowOpacity: 0,\r\n                    height:45,\r\n                },\r\n                headerTitleStyle: {\r\n                    fontWeight: 'normal',\r\n                    fontSize:17,\r\n                    alignSelf:'center'\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerRight :() => (\r\n                    <Box></Box>\r\n                )\r\n            }\r\n        );\r\n\r\n        this.state = {\r\n            id: this.props.route.params.id,\r\n            condition : {},\r\n            percentage:0,\r\n            tickTockSecond:0,\r\n            elapsedDays:0,\r\n            elapsedHours:0,\r\n            elapsedMinutes:0,\r\n            elapsedSeconds:0,\r\n        }\r\n        StatusBar.setBarStyle(\"light-content\");\r\n        StatusBar.setBackgroundColor(\"#E84C3D\");\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        HealthConditions.forEach((value) => {\r\n           if(value.id == this.state.id){\r\n               this.setState({condition:value});\r\n                this.state.condition=value;\r\n               return;\r\n           }\r\n        });\r\n\r\n        let quitDate = new Date(this.props.date).getTime();\r\n        let time = this.state.condition?.time;\r\n        let now = (new Date(Date.now())).getTime();\r\n\r\n        let diff = now - (time+quitDate);\r\n\r\n        if(diff < 0) {\r\n\r\n            let percentage = 100 - ((100* Math.abs(diff))/time);\r\n            this.setState({percentage:percentage});\r\n\r\n        }else {\r\n            this.state.percentage=100;\r\n        }\r\n        this.timer = setInterval(() => this.ticktock(),1000);\r\n    }\r\n\r\n    ticktock = () => {\r\n\r\n        if(this.state.percentage<100) {\r\n            let diff = ((new Date(Date.now())).getTime() - ((new Date(this.props.date)).getTime()+ this.state.condition.time))\r\n            if(diff < 0) {\r\n                let different = Math.abs(diff) -1000;\r\n\r\n                let df = new DateDifferences(different);\r\n                this.setState({\r\n                    elapsedDays: df.elapsedDays < 0 ? 0 : df.elapsedDays,\r\n                    elapsedHours: df.elapsedHours < 0 ? 0 : df.elapsedHours,\r\n                    elapsedMinutes: df.elapsedMinutes < 0 ? 0: df.elapsedMinutes,\r\n                    elapsedSeconds: df.elapsedSeconds < 0 ? 0 : df.elapsedSeconds,\r\n                });\r\n            }\r\n        } else{\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <Box flex={1} alignItems='center' flexDirection={'row'} justifyContent={'center'} bg={'#E84C3D'}>\r\n                    <Box flexDirection={\"column\"} alignItems={'center'}>\r\n                        <AnimatedCircularProgress\r\n                            ref={(ref) => this.circularProgress = ref}\r\n                            size={150}\r\n                            width={8}\r\n                            fill={this.state?.percentage}\r\n                            tintColor=\"white\"\r\n                            backgroundColor=\"#353D29\"\r\n                        >\r\n                            {(fill) => (\r\n                                <Text fontSize={2} color={'white'}  >\r\n                                    { (100 * fill / 100).toFixed(1) }%\r\n                                </Text>\r\n                            )}\r\n                        </AnimatedCircularProgress>\r\n\r\n                        <Text color={'white'} mt={4} fontSize={15} textAlign={'center'} width={'100%'}>\r\n                            {this.state.condition.condition}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity activeOpacity={.75} style={{minWidth:'87%', marginTop:30}}>\r\n                            <Box mt={20} borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                                <Box borderTopLeftRadius={7} borderTopRightRadius={7} height={35} flexDirection={'row'} bg={'#34495e'}  alignItems={'center'}>\r\n                                    <Clock width={25} style={{marginLeft:10}} color='white'/>\r\n                                    <Text  ml={10} textAlign={'center'} color={\"white\"} fontWeight={'normal'} >{I18n.t(\"health.remaining_time\")}</Text>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box flexDirection={'row'} py={1} bg={'white'} justifyContent={'center'}  alignItems={'center'} borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                                <Box flexDirection={'column'} flex={1} alignItems={'center'} borderRightWidth={1} borderColor={'#34495e'} >\r\n                                    <Text>{this.state.elapsedDays}</Text>\r\n                                    <Text mt={1}>{I18n.t(\"day\")}</Text>\r\n                                </Box>\r\n                                <Box flexDirection={'column'}  flex={1} alignItems={'center'} borderRightWidth={1} borderColor={'#34495e'}>\r\n                                    <Text>{this.state.elapsedHours}</Text>\r\n                                    <Text mt={1}>{I18n.t(\"hour\")}</Text>\r\n                                </Box>\r\n                                <Box flexDirection={'column'} flex={1} alignItems={'center'} borderRightWidth={1} borderColor={'#34495e'}>\r\n                                    <Text>{this.state.elapsedMinutes}</Text>\r\n                                    <Text mt={1}>{I18n.t(\"minute\")}</Text>\r\n                                </Box>\r\n                                <Box flexDirection={'column'} flex={1} alignItems={'center'} borderRightWidth={1}  borderColor={'white'}>\r\n                                    <Text>{this.state.elapsedSeconds}</Text>\r\n                                    <Text mt={1}>{I18n.t(\"second\")}</Text>\r\n                                </Box>\r\n                            </Box>\r\n                        </TouchableOpacity>\r\n                    </Box>\r\n                </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {ui} = state;\r\n    return {\r\n        date: ui.date,\r\n        wasteTime: ui.wasteTime,\r\n        smokingCountPerDay: ui.smokingCountPerDay,\r\n        countCigaretteInPocket: ui.countCigaretteInPocket,\r\n        price: ui.price\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HealthConditionScreen);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}