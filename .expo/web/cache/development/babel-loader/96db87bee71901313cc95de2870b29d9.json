{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _Box = _interopRequireDefault(require(\"../UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../UI/Text\"));\n\nvar _CircleProgress = _interopRequireDefault(require(\"../progress/CircleProgress\"));\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\components\\\\CustomLists\\\\HealthItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HealthItem = function (_React$Component) {\n  (0, _inherits2.default)(HealthItem, _React$Component);\n\n  var _super = _createSuper(HealthItem);\n\n  function HealthItem(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, HealthItem);\n    _this = _super.call(this, props);\n    _this.state = {\n      percentage: 0\n    };\n    var date = new Date(_this.props.date).getTime();\n    var time = _this.props.time;\n    var now = new Date(Date.now()).getTime();\n    var diff = now - (time + date);\n\n    if (diff < 0) {\n      var percentage = 100 - 100 * Math.abs(diff) / time;\n      _this.state.percentage = percentage;\n    } else {\n      _this.state.percentage = 100;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(HealthItem, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        activeOpacity: 0.7,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        alignItems: 'center',\n        borderBottomWidth: 1,\n        borderColor: '#ddd',\n        py: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_CircleProgress.default, {\n        flex: 0,\n        circleHeight: 58,\n        style: {\n          marginLeft: 8,\n          marginRight: 12\n        },\n        percentage: this.state.percentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_Text.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, this.props.condition), _react.default.createElement(_Text.default, {\n        color: '#777',\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, this.props.needTime)), _react.default.createElement(_icons.ArrowRightIcon, {\n        flex: 0,\n        style: {\n          marginRight: 3\n        },\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return HealthItem;\n}(_react.default.Component);\n\nvar _default = HealthItem;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/components/CustomLists/HealthItem.js"],"names":["HealthItem","props","state","percentage","date","Date","getTime","time","now","diff","Math","abs","onPress","marginLeft","marginRight","condition","needTime","React","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEMA,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACRC,MAAAA,UAAU,EAAC;AADH,KAAZ;AAGA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,MAAKJ,KAAL,CAAWG,IAApB,EAA0BE,OAA1B,EAAX;AACA,QAAIC,IAAI,GAAG,MAAKN,KAAL,CAAWM,IAAtB;AACA,QAAIC,GAAG,GAAI,IAAIH,IAAJ,CAASA,IAAI,CAACG,GAAL,EAAT,CAAD,CAAuBF,OAAvB,EAAV;AAEA,QAAIG,IAAI,GAAGD,GAAG,IAAID,IAAI,GAACH,IAAT,CAAd;;AAEA,QAAGK,IAAI,GAAG,CAAV,EAAa;AACT,UAAIN,UAAU,GAAG,MAAQ,MAAKO,IAAI,CAACC,GAAL,CAASF,IAAT,CAAN,GAAsBF,IAA9C;AACA,YAAKL,KAAL,CAAWC,UAAX,GAAwBA,UAAxB;AACH,KAHD,MAGM;AACF,YAAKD,KAAL,CAAWC,UAAX,GAAsB,GAAtB;AACH;;AAhBc;AAiBlB;;;;6BAEQ;AACL,aACI,6BAAC,2CAAD;AAAkB,QAAA,aAAa,EAAE,GAAjC;AAAsC,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWW,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,YAAD;AAAK,QAAA,aAAa,EAAE,KAApB;AAA2B,QAAA,UAAU,EAAE,QAAvC;AAAiD,QAAA,iBAAiB,EAAE,CAApE;AAAuE,QAAA,WAAW,EAAE,MAApF;AAA4F,QAAA,EAAE,EAAE,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,uBAAD;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,YAAY,EAAE,EAAvC;AAA2C,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAC,CAAb;AAAgBC,UAAAA,WAAW,EAAC;AAA5B,SAAlD;AAAoF,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWC,UAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,6BAAC,YAAD;AAAK,QAAA,aAAa,EAAE,QAApB;AAA8B,QAAA,IAAI,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKF,KAAL,CAAWc,SAAnB,CADJ,EAEI,6BAAC,aAAD;AAAM,QAAA,KAAK,EAAE,MAAb;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKd,KAAL,CAAWe,QAAxC,CAFJ,CAFJ,EAMI,6BAAC,qBAAD;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAE;AAACF,UAAAA,WAAW,EAAC;AAAb,SAAhC;AAAiD,QAAA,KAAK,EAAE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,CADJ;AAYH;;;EAjCoBG,eAAMC,S;;eAoChBlB,U","sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport Box from \"../UI/Box\";\r\nimport Text from \"../UI/Text\";\r\nimport CircleProgress from \"../progress/CircleProgress\";\r\nimport {ArrowRightIcon} from \"../../assets/icons\";\r\n\r\nclass HealthItem extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            percentage:0\r\n        }\r\n        let date = new Date(this.props.date).getTime();\r\n        let time = this.props.time;\r\n        let now = (new Date(Date.now())).getTime();\r\n\r\n        let diff = now - (time+date);\r\n\r\n        if(diff < 0) {\r\n            let percentage = 100 - ((100* Math.abs(diff))/time);\r\n            this.state.percentage = percentage;\r\n        }else {\r\n            this.state.percentage=100;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TouchableOpacity activeOpacity={0.7} onPress={this.props.onPress}>\r\n                <Box flexDirection={'row'} alignItems={'center'} borderBottomWidth={1} borderColor={'#ddd'} py={2}>\r\n                    <CircleProgress flex={0} circleHeight={58} style={{ marginLeft:8, marginRight:12}}  percentage={this.state.percentage} />\r\n                    <Box flexDirection={'column'} flex={1}>\r\n                        <Text >{this.props.condition}</Text>\r\n                        <Text color={'#777'} mt={1}>{this.props.needTime}</Text>\r\n                    </Box>\r\n                    <ArrowRightIcon flex={0} style={{marginRight:3}} color={\"red\"}/>\r\n                </Box>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HealthItem\r\n"]},"metadata":{},"sourceType":"script"}