{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _CircularProgress = _interopRequireDefault(require(\"./CircularProgress\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\node_modules\\\\react-native-circular-progress\\\\src\\\\AnimatedCircularProgress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedProgress = _reactNative.Animated.createAnimatedComponent(_CircularProgress.default);\n\nvar AnimatedCircularProgress = function (_React$PureComponent) {\n  (0, _inherits2.default)(AnimatedCircularProgress, _React$PureComponent);\n\n  var _super = _createSuper(AnimatedCircularProgress);\n\n  function AnimatedCircularProgress(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedCircularProgress);\n    _this = _super.call(this, props);\n    _this.state = {\n      fillAnimation: new _reactNative.Animated.Value(props.prefill)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedCircularProgress, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.fill !== this.props.fill) {\n        this.animate();\n      }\n    }\n  }, {\n    key: \"reAnimate\",\n    value: function reAnimate(prefill, toVal, dur, ease) {\n      var _this2 = this;\n\n      this.setState({\n        fillAnimation: new _reactNative.Animated.Value(prefill)\n      }, function () {\n        return _this2.animate(toVal, dur, ease);\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(toVal, dur, ease) {\n      var toValue = toVal >= 0 ? toVal : this.props.fill;\n      var duration = dur || this.props.duration;\n      var easing = ease || this.props.easing;\n      var useNativeDriver = this.props.useNativeDriver;\n\n      var anim = _reactNative.Animated.timing(this.state.fillAnimation, {\n        useNativeDriver: useNativeDriver,\n        toValue: toValue,\n        easing: easing,\n        duration: duration\n      });\n\n      anim.start(this.props.onAnimationComplete);\n      return anim;\n    }\n  }, {\n    key: \"animateColor\",\n    value: function animateColor() {\n      if (!this.props.tintColorSecondary) {\n        return this.props.tintColor;\n      }\n\n      var tintAnimation = this.state.fillAnimation.interpolate({\n        inputRange: [0, 100],\n        outputRange: [this.props.tintColor, this.props.tintColorSecondary]\n      });\n      return tintAnimation;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          fill = _this$props.fill,\n          prefill = _this$props.prefill,\n          other = (0, _objectWithoutProperties2.default)(_this$props, [\"fill\", \"prefill\"]);\n      return _react.default.createElement(AnimatedProgress, (0, _extends2.default)({}, other, {\n        fill: this.state.fillAnimation,\n        tintColor: this.animateColor(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n  return AnimatedCircularProgress;\n}(_react.default.PureComponent);\n\nexports.default = AnimatedCircularProgress;\nAnimatedCircularProgress.propTypes = _objectSpread(_objectSpread({}, _CircularProgress.default.propTypes), {}, {\n  prefill: _propTypes.default.number,\n  duration: _propTypes.default.number,\n  easing: _propTypes.default.func,\n  onAnimationComplete: _propTypes.default.func,\n  useNativeDriver: _propTypes.default.bool\n});\nAnimatedCircularProgress.defaultProps = {\n  duration: 500,\n  easing: _reactNative.Easing.out(_reactNative.Easing.ease),\n  prefill: 0,\n  useNativeDriver: false\n};","map":{"version":3,"sources":["C:/Projeler/quitsmoking/node_modules/react-native-circular-progress/src/AnimatedCircularProgress.js"],"names":["AnimatedProgress","Animated","createAnimatedComponent","CircularProgress","AnimatedCircularProgress","props","state","fillAnimation","Value","prefill","animate","prevProps","fill","toVal","dur","ease","setState","toValue","duration","easing","useNativeDriver","anim","timing","start","onAnimationComplete","tintColorSecondary","tintColor","tintAnimation","interpolate","inputRange","outputRange","other","animateColor","React","PureComponent","propTypes","PropTypes","number","func","bool","defaultProps","Easing","out"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\nimport CircularProgress from './CircularProgress';\nconst AnimatedProgress = Animated.createAnimatedComponent(CircularProgress);\n\nexport default class AnimatedCircularProgress extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fillAnimation: new Animated.Value(props.prefill),\n    };\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.fill !== this.props.fill) {\n      this.animate();\n    }\n  }\n\n  reAnimate(prefill, toVal, dur, ease) {\n    this.setState(\n      {\n        fillAnimation: new Animated.Value(prefill),\n      },\n      () => this.animate(toVal, dur, ease)\n    );\n  }\n\n  animate(toVal, dur, ease) {\n    const toValue = toVal >= 0 ? toVal : this.props.fill;\n    const duration = dur || this.props.duration;\n    const easing = ease || this.props.easing;\n    const useNativeDriver = this.props.useNativeDriver;\n    \n    const anim = Animated.timing(this.state.fillAnimation, {\n      useNativeDriver,\n      toValue,\n      easing,\n      duration,\n    });\n    anim.start(this.props.onAnimationComplete);\n\n    return anim;\n  }\n\n  animateColor() {\n    if (!this.props.tintColorSecondary) {\n      return this.props.tintColor\n    }\n\n    const tintAnimation = this.state.fillAnimation.interpolate({\n      inputRange: [0, 100],\n      outputRange: [this.props.tintColor, this.props.tintColorSecondary]\n    })\n\n    return tintAnimation\n  }\n\n  render() {\n    const { fill, prefill, ...other } = this.props;\n\n    return <AnimatedProgress {...other} fill={this.state.fillAnimation} tintColor={this.animateColor()} />;\n  }\n}\n\nAnimatedCircularProgress.propTypes = {\n  ...CircularProgress.propTypes,\n  prefill: PropTypes.number,\n  duration: PropTypes.number,\n  easing: PropTypes.func,\n  onAnimationComplete: PropTypes.func,\n  useNativeDriver: PropTypes.bool,\n};\n\nAnimatedCircularProgress.defaultProps = {\n  duration: 500,\n  easing: Easing.out(Easing.ease),\n  prefill: 0,\n  useNativeDriver: false,\n};\n"]},"metadata":{},"sourceType":"script"}