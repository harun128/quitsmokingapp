{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar defaultRules = {\n  numbers: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  required: /\\S+/,\n  date: function date() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"YYYY-MM-DD\";\n    var value = arguments.length > 1 ? arguments[1] : undefined;\n    var d = (0, _moment.default)(value, format);\n    if (d == null || !d.isValid()) return false;\n    return true;\n  },\n  minlength: function minlength(length, value) {\n    if (length === void 0) {\n      throw 'ERROR: It is not a valid length, checkout your minlength settings.';\n    } else if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  },\n  maxlength: function maxlength(length, value) {\n    if (length === void 0) {\n      throw 'ERROR: It is not a valid length, checkout your maxlength settings.';\n    } else if (value.length > length) {\n      return false;\n    }\n\n    return true;\n  }\n};\nvar _default = defaultRules;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/node_modules/react-native-form-validator/defaultRules.js"],"names":["defaultRules","numbers","email","required","date","format","value","d","isValid","minlength","length","maxlength"],"mappings":"AAAA;;;;;;;;;AAEA;;AAGA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,mCADU;AAEnBC,EAAAA,KAAK,EAAE,yJAFY;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,IAJmB,kBAIc;AAAA,QAA5BC,MAA4B,uEAArB,YAAqB;AAAA,QAAPC,KAAO;AAC/B,QAAMC,CAAC,GAAG,qBAAOD,KAAP,EAAcD,MAAd,CAAV;AACA,QAAGE,CAAC,IAAI,IAAL,IAAa,CAACA,CAAC,CAACC,OAAF,EAAjB,EAA8B,OAAO,KAAP;AAC9B,WAAO,IAAP;AACD,GARkB;AASnBC,EAAAA,SATmB,qBASTC,MATS,EASDJ,KATC,EASM;AACvB,QAAII,MAAM,KAAK,KAAK,CAApB,EAAwB;AACtB,YAAM,oEAAN;AACD,KAFD,MAEO,IAAGJ,KAAK,CAACI,MAAN,IAAgBA,MAAnB,EAA2B;AAChC,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAhBkB;AAiBnBC,EAAAA,SAjBmB,qBAiBTD,MAjBS,EAiBDJ,KAjBC,EAiBM;AACvB,QAAII,MAAM,KAAK,KAAK,CAApB,EAAwB;AACtB,YAAM,oEAAN;AACD,KAFD,MAEO,IAAIJ,KAAK,CAACI,MAAN,GAAeA,MAAnB,EAA2B;AAChC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;AAxBkB,CAArB;eA2BeV,Y","sourcesContent":["'use strict';\n\nimport moment from 'moment';\n\n// Custom default rules to validate form fields\nconst defaultRules = {\n  numbers: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  required: /\\S+/,\n  date(format=\"YYYY-MM-DD\", value) {\n    const d = moment(value, format);\n    if(d == null || !d.isValid()) return false;\n    return true;\n  },\n  minlength(length, value) {\n    if (length === void(0)) {\n      throw 'ERROR: It is not a valid length, checkout your minlength settings.';\n    } else if(value.length >= length) {\n      return true;\n    }\n    return false;\n  },\n  maxlength(length, value) {\n    if (length === void(0)) {\n      throw 'ERROR: It is not a valid length, checkout your maxlength settings.';\n    } else if (value.length > length) {\n      return false;\n    }\n    return true;\n  }\n};\n\nexport default defaultRules;\n"]},"metadata":{},"sourceType":"script"}