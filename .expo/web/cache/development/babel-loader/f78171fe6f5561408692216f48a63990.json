{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../UI/Text\"));\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _AchievementsList = _interopRequireDefault(require(\"../../config/AchievementsList\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\components\\\\mainpage\\\\MainPageAchievements.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MainPageAchievements = function (_React$Component) {\n  (0, _inherits2.default)(MainPageAchievements, _React$Component);\n\n  var _super = _createSuper(MainPageAchievements);\n\n  function MainPageAchievements(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MainPageAchievements);\n    _this = _super.call(this, props);\n\n    _this.setAchievement = function () {\n      _reactNative.AsyncStorage.multiGet([\"date\", \"smokingCountPerDay\", \"countCigaretteInPocket\", \"wasteTime\", \"price\"]).then(function (result) {\n        var al = new _AchievementsList.default(result[0][1], result[1][1], result[2][1], result[4][1]);\n        var list = al.getNotification();\n        var sorted = list.sort(function (a, b) {\n          return a.time > b.time ? 1 : -1;\n        });\n        var now = new Date(Date.now()).getTime();\n        sorted.some(function (value, index) {\n          var diff = now - value.time;\n\n          if (diff < 0) {\n            if (index > 0) {\n              var selected = sorted[index - 1];\n\n              _this.setState({\n                lastAchievement: selected\n              });\n\n              _this.setState({\n                image: _AchievementsList.default.getImage(selected.image)\n              });\n\n              return true;\n            } else {\n              var _selected = sorted[0];\n\n              _this.setState({\n                lastAchievement: _selected\n              });\n\n              _this.setState({\n                image: _AchievementsList.default.getImage(_selected.image)\n              });\n\n              return true;\n            }\n          } else if (index == 17) {\n            var _selected2 = sorted[17];\n\n            _this.setState({\n              lastAchievement: _selected2\n            });\n\n            _this.setState({\n              image: _AchievementsList.default.getImage(_selected2.image)\n            });\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      condition: '',\n      lastAchievement: {},\n      image: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MainPageAchievements, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setAchievement();\n      this.props.navigation.addListener(\"focus\", function () {\n        _this2.setAchievement();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$lastAchie;\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: .75,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Box.default, {\n        mt: 3,\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        borderTopLeftRadius: 7,\n        borderTopRightRadius: 7,\n        height: 35,\n        flexDirection: 'row',\n        bg: '#27ae60',\n        alignItems: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_icons.AchievementIcon, {\n        style: {\n          marginLeft: 10\n        },\n        color: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 10,\n        textAlign: 'center',\n        color: \"white\",\n        fontWeight: 'normal',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, this.props.title))), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        py: 15,\n        bg: 'white',\n        height: 70,\n        alignItems: 'center',\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        resizeMode: \"contain\",\n        style: {\n          width: 45,\n          marginLeft: 10,\n          marginVertical: 10\n        },\n        source: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, (_this$state$lastAchie = this.state.lastAchievement) == null ? void 0 : _this$state$lastAchie.achievement)));\n    }\n  }]);\n  return MainPageAchievements;\n}(_react.default.Component);\n\nMainPageAchievements.propTypes = {\n  navigation: _propTypes.default.any,\n  title: _propTypes.default.string\n};\nvar _default = MainPageAchievements;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/components/mainpage/MainPageAchievements.js"],"names":["MainPageAchievements","props","setAchievement","AsyncStorage","multiGet","then","result","al","AchievementsList","list","getNotification","sorted","sort","a","b","time","now","Date","getTime","some","value","index","diff","selected","setState","lastAchievement","image","getImage","state","condition","navigation","addListener","onPress","marginLeft","title","width","marginVertical","achievement","React","Component","propTypes","PropTypes","any","string"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Box from \"../UI/Box\";\r\nimport Text from \"../UI/Text\";\r\n\r\nimport {AchievementIcon} from \"../../assets/icons\";\r\nimport {TouchableOpacity,AsyncStorage,Image} from \"react-native\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport AchievementsList from \"../../config/AchievementsList\";\r\n\r\nclass MainPageAchievements extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            condition : '',\r\n            lastAchievement : {},\r\n            image: ''\r\n        }\r\n    }\r\n\r\n    setAchievement = () =>{\r\n        AsyncStorage.multiGet([\"date\", \"smokingCountPerDay\", \"countCigaretteInPocket\", \"wasteTime\", \"price\"]).then((result) => {\r\n            let al = new AchievementsList(result[0][1], result[1][1], result[2][1], result[4][1]);\r\n            let list = al.getNotification();\r\n            let sorted = list.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n            let now = (new Date(Date.now())).getTime();\r\n            sorted.some((value, index) => {\r\n                let diff = now - value.time;\r\n                if (diff < 0) {\r\n                    if (index > 0) {\r\n                        let selected = sorted[(index-1)];\r\n                        this.setState({lastAchievement: selected});\r\n                        this.setState({image: AchievementsList.getImage(selected.image)});\r\n\r\n                        return true;\r\n                    }else {\r\n                        let selected = sorted[0];\r\n                        this.setState({lastAchievement: selected});\r\n                        this.setState({image: AchievementsList.getImage(selected.image)});\r\n                        return true;\r\n                    }\r\n                } else if(index == 17) {\r\n                    let selected = sorted[17];\r\n                    this.setState({lastAchievement: selected});\r\n                    this.setState({image: AchievementsList.getImage(selected.image)});\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.setAchievement();\r\n\r\n        this.props.navigation.addListener(\"focus\" ,() => {\r\n            this.setAchievement()\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TouchableOpacity activeOpacity={.75} onPress={this.props.onPress} >\r\n                <Box mt={3}  borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                    <Box borderTopLeftRadius={7} borderTopRightRadius={7} height={35} flexDirection={'row'} bg={'#27ae60'}  alignItems={'center'}>\r\n                        <AchievementIcon  style={{marginLeft:10}} color={'white'} />\r\n                        <Text  ml={10} textAlign={'center'} color={\"white\"} fontWeight={'normal'} >{this.props.title}</Text>\r\n                    </Box>\r\n                </Box>\r\n                <Box flexDirection={'row'} py={15} bg={'white'} height={70}  alignItems={'center'} borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                        <Image\r\n                            resizeMode={\"contain\"}\r\n                            style={{width:45,  marginLeft:10, marginVertical:10}}\r\n                            source={this.state.image}\r\n                        />\r\n                        <Text ml={3}>{this.state.lastAchievement?.achievement}</Text>\r\n                </Box>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nMainPageAchievements.propTypes = {\r\n    navigation:PropTypes.any,\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default (MainPageAchievements);\r\n\r\n"]},"metadata":{},"sourceType":"script"}