{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../../components/UI/Text\"));\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _TextInput = _interopRequireDefault(require(\"../../components/UI/TextInput\"));\n\nvar _reactNativeFormValidator = _interopRequireDefault(require(\"react-native-form-validator\"));\n\nvar _UserSession = require(\"./../../state/actions/UserSession\");\n\nvar _reactNativeFlashMessage = _interopRequireWildcard(require(\"react-native-flash-message\"));\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Community\\\\Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Register = function (_ValidationComponent) {\n  (0, _inherits2.default)(Register, _ValidationComponent);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Register);\n    _this = _super.call(this, props);\n    _this.messages = {\n      en: {\n        email: \"Mail address is not verified.\",\n        required: \"This field is required to be filled.\",\n        minlength: \"Password field must contain a minimum of 7 characters.\",\n        maxlength: \"asd\"\n      }\n    };\n\n    _this._onLoginButton = function () {\n      _this.validate({\n        password: {\n          minlength: 3,\n          required: true\n        },\n        email: {\n          email: true,\n          required: true\n        },\n        username: {\n          required: true,\n          minlength: 3\n        }\n      });\n\n      if (_this.isFormValid()) {\n        (0, _UserSession.RegisterPost)(_this.state.email, _this.state.password, _this.state.username, function (data) {\n          if (data.success === true) {\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: _18n.default.t(\"community.register_success\"),\n              description: _18n.default.t(\"community.can_login\"),\n              type: \"success\",\n              duration: 3500\n            });\n\n            _this.setState({\n              email: \"\",\n              username: \"\",\n              password: \"\"\n            });\n          } else {\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: _18n.default.t(\"community.error\"),\n              description: data.message,\n              type: \"warning\",\n              duration: 3500\n            });\n          }\n        });\n      } else {}\n    };\n\n    _this.state = {\n      emailFocus: false,\n      passwordFocus: false,\n      userNameFocus: false,\n      email: \"\",\n      password: \"\",\n      username: \"\"\n    };\n\n    _this.props.navigation.setOptions({\n      headerTitle: _18n.default.t(\"community.register\"),\n      headerStyle: {\n        backgroundColor: '#FAB045',\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 45\n      },\n      headerTitleStyle: {\n        fontWeight: 'normal',\n        fontSize: 17,\n        alignSelf: 'center'\n      },\n      headerTintColor: '#fff',\n      headerRight: function headerRight() {\n        return _react.default.createElement(_Box.default, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeFlashMessage.default, {\n        position: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        alignItems: 'center',\n        pt: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: \"row\",\n        my: 3,\n        borderWidth: 1,\n        borderColor: '#ddd',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_TextInput.default, {\n        value: this.state.username,\n        onFocus: function onFocus() {\n          _this2.setState({\n            usernameFocus: true\n          });\n        },\n        onBlur: function onBlur() {\n          _this2.setState({\n            usernameFocus: false\n          });\n        },\n        style: this.state.usernameFocus ? styles.focusInput : styles.input,\n        onChangeText: function onChangeText(value) {\n          _this2.setState({\n            username: value.trim()\n          });\n        },\n        placeholder: _18n.default.t(\"community.username\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      })), this.isFieldInError('username') && this.getErrorsInField('username').map(function (errorMessage) {\n        return _react.default.createElement(_Text.default, {\n          color: \"red\",\n          my: 1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 111\n          }\n        }, errorMessage);\n      }), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_TextInput.default, {\n        value: this.state.email,\n        onFocus: function onFocus() {\n          _this2.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur() {\n          _this2.setState({\n            emailFocus: false\n          });\n        },\n        style: this.state.emailFocus ? styles.focusInput : styles.input,\n        onChangeText: function onChangeText(value) {\n          _this2.setState({\n            email: value.trim()\n          });\n        },\n        placeholder: _18n.default.t(\"community.email\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      })), this.isFieldInError('email') && this.getErrorsInField('email').map(function (errorMessage) {\n        return _react.default.createElement(_Text.default, {\n          color: \"red\",\n          my: 1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 105\n          }\n        }, errorMessage);\n      }), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_TextInput.default, {\n        value: this.state.password,\n        onFocus: function onFocus() {\n          _this2.setState({\n            passwordFocus: true\n          });\n        },\n        onBlur: function onBlur() {\n          _this2.setState({\n            passwordFocus: false\n          });\n        },\n        onChangeText: function onChangeText(value) {\n          _this2.setState({\n            password: value.trim()\n          });\n        },\n        secureTextEntry: true,\n        style: this.state.passwordFocus ? styles.focusInput : styles.input,\n        placeholder: _18n.default.t(\"community.password\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      })), this.isFieldInError('password') && this.getErrorsInField('password').map(function (errorMessage) {\n        return _react.default.createElement(_Text.default, {\n          color: \"red\",\n          my: 1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 111\n          }\n        }, errorMessage);\n      }), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        mt: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 0.8,\n        onPress: this._onLoginButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        style: {\n          backgroundColor: \"#16a085\",\n          paddingVertical: 10,\n          paddingHorizontal: 100,\n          borderRadius: 9\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_icons.RegisterIcon, {\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 3,\n        fontWeight: '800',\n        color: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, _18n.default.t(\"community.register\"))))), _react.default.createElement(_Box.default, {\n        flexDirection: 'column',\n        flex: 1,\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n  return Register;\n}(_reactNativeFormValidator.default);\n\nvar styles = _reactNative.StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: '#fff',\n    flex: 1,\n    marginHorizontal: 50,\n    marginBottom: 10,\n    borderRadius: 6,\n    paddingHorizontal: 8,\n    textAlign: 'center',\n    backgroundColor: '#fff'\n  },\n  focusInput: {\n    borderWidth: 1,\n    borderColor: '#FAB045',\n    flex: 1,\n    marginHorizontal: 50,\n    marginBottom: 10,\n    borderRadius: 6,\n    paddingHorizontal: 8,\n    textAlign: 'center',\n    backgroundColor: '#fff'\n  }\n});\n\nvar _default = Register;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Community/Register.js"],"names":["Register","props","messages","en","email","required","minlength","maxlength","_onLoginButton","validate","password","username","isFormValid","state","data","success","message","I18n","t","description","type","duration","setState","emailFocus","passwordFocus","userNameFocus","navigation","setOptions","headerTitle","headerStyle","backgroundColor","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","alignSelf","headerTintColor","headerRight","usernameFocus","styles","focusInput","input","value","trim","isFieldInError","getErrorsInField","map","errorMessage","paddingVertical","paddingHorizontal","borderRadius","ValidationComponent","StyleSheet","create","borderWidth","borderColor","flex","marginHorizontal","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {SafeAreaView, StyleSheet, TouchableOpacity,ScrollView} from \"react-native\";\r\nimport Box from \"../../components/UI/Box\";\r\nimport Text from \"../../components/UI/Text\";\r\nimport {RegisterIcon} from \"../../assets/icons\";\r\nimport TextInput from \"../../components/UI/TextInput\";\r\nimport ValidationComponent from 'react-native-form-validator';\r\nimport {RegisterPost} from \"./../../state/actions/UserSession\";\r\nimport { showMessage } from \"react-native-flash-message\";\r\nimport I18n from \"./../../lang/_18n\"\r\nimport FlashMessage from \"react-native-flash-message\";\r\nclass Register extends ValidationComponent{\r\n    messages = {\r\n        en: {\r\n            email: \"Mail address is not verified.\",\r\n            required: \"This field is required to be filled.\",\r\n            minlength: \"Password field must contain a minimum of 7 characters.\",\r\n            maxlength:\"asd\"\r\n        },\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emailFocus :false,\r\n            passwordFocus:false,\r\n            userNameFocus:false,\r\n            email : \"\",\r\n            password :\"\",\r\n            username: \"\",\r\n        }\r\n        this.props.navigation.setOptions({\r\n                headerTitle:I18n.t(\"community.register\"),\r\n                headerStyle : {\r\n                    backgroundColor: '#FAB045',\r\n                    elevation: 0,       //remove shadow on Android\r\n                    shadowOpacity: 0,\r\n                    height:45,\r\n                },\r\n                headerTitleStyle: {\r\n                    fontWeight: 'normal',\r\n                    fontSize:17,\r\n                    alignSelf:'center'\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerRight :() => (\r\n                    <Box>\r\n                    </Box>\r\n                )\r\n            }\r\n        );\r\n    }\r\n\r\n    _onLoginButton = () => {\r\n\r\n        this.validate({\r\n            password: {minlength:3, required: true},\r\n            email: {email: true,required: true},\r\n            username: {required:true,minlength:3}\r\n        });\r\n        if(this.isFormValid()) {\r\n            RegisterPost(this.state.email,this.state.password,this.state.username,(data) => {\r\n                if(data.success === true) {\r\n                    showMessage({\r\n                        message: I18n.t(\"community.register_success\"),\r\n                        description: I18n.t(\"community.can_login\"),\r\n                        type: \"success\",\r\n                        duration:3500,\r\n                    });\r\n                    this.setState({email:\"\",username:\"\",password:\"\"});\r\n\r\n                } else {\r\n                    showMessage({\r\n                        message: I18n.t(\"community.error\"),\r\n                        description: data.message,\r\n                        type: \"warning\",\r\n                        duration:3500,\r\n                    });\r\n                }\r\n            })\r\n\r\n        }else {\r\n        //alert(\"asd\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <SafeAreaView>\r\n                <FlashMessage position=\"top\" />\r\n                <ScrollView>\r\n                <Box flexDirection={'column'} alignItems={'center'} pt={5}>\r\n                    <Box flexDirection={\"row\"} my={3} borderWidth={1} borderColor={'#ddd'}>\r\n                    </Box>\r\n                    <Box flexDirection={'row'}>\r\n                        <TextInput\r\n                            value={this.state.username}\r\n                            onFocus={() => {this.setState({usernameFocus:true})}}\r\n                            onBlur={() => {this.setState({usernameFocus:false})}}\r\n                            style={this.state.usernameFocus ? styles.focusInput : styles.input}\r\n                            onChangeText = {(value) => {this.setState({username:value.trim()})}}\r\n                            placeholder={I18n.t(\"community.username\")}\r\n                        />\r\n\r\n                    </Box>\r\n                    {this.isFieldInError('username') && this.getErrorsInField('username').map(errorMessage => <Text color={\"red\"} my={1}>{errorMessage}</Text>) }\r\n                    <Box flexDirection={'row'}>\r\n                        <TextInput\r\n                            value={this.state.email}\r\n                            onFocus={() => {this.setState({emailFocus:true})}}\r\n                            onBlur={() => {this.setState({emailFocus:false})}}\r\n                            style={this.state.emailFocus ? styles.focusInput : styles.input}\r\n                            onChangeText = {(value) => {this.setState({email:value.trim()})}}\r\n                            placeholder={I18n.t(\"community.email\")}\r\n                        />\r\n                    </Box>\r\n                    {this.isFieldInError('email') && this.getErrorsInField('email').map(errorMessage => <Text color={\"red\"} my={1}>{errorMessage}</Text>) }\r\n                    <Box flexDirection={'row'}>\r\n                        <TextInput\r\n                            value={this.state.password}\r\n                            onFocus={() => {this.setState({passwordFocus:true})}}\r\n                            onBlur={() => {this.setState({passwordFocus:false})}}\r\n                            onChangeText = {(value) => {this.setState({password:value.trim()})}}\r\n                            secureTextEntry={true}\r\n                            style={this.state.passwordFocus ? styles.focusInput : styles.input}\r\n                            placeholder={I18n.t(\"community.password\")} />\r\n                    </Box>\r\n                    {this.isFieldInError('password') && this.getErrorsInField('password').map(errorMessage => <Text color={\"red\"} my={1}>{errorMessage}</Text>) }\r\n                    <Box flexDirection={'row'} mt={10}>\r\n                        <TouchableOpacity  activeOpacity={0.8} onPress={this._onLoginButton}>\r\n                            <Box flexDirection={'row'} alignItems={\"center\"} justifyContent={\"center\"} style={{backgroundColor:\"#16a085\",paddingVertical:10,paddingHorizontal:100,borderRadius:9}}>\r\n                                <RegisterIcon color={\"white\"}/>\r\n                                <Text ml={3} fontWeight={'800'} color={\"#fff\"}>{I18n.t(\"community.register\")}</Text>\r\n                            </Box>\r\n                        </TouchableOpacity>\r\n                    </Box>\r\n                    <Box flexDirection={'column'} flex={1}  mt={3} >\r\n                    </Box>\r\n                </Box>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        borderWidth:1,\r\n        borderColor: '#fff',\r\n        flex:1,\r\n        marginHorizontal:50,\r\n        marginBottom:10,\r\n        borderRadius:6,\r\n        paddingHorizontal:8,\r\n        textAlign:'center',\r\n        backgroundColor:'#fff'\r\n    },\r\n    focusInput: {\r\n        borderWidth:1,\r\n        borderColor:'#FAB045',\r\n        flex:1,\r\n        marginHorizontal:50,\r\n        marginBottom:10,\r\n        borderRadius:6,\r\n        paddingHorizontal:8,\r\n        textAlign:'center',\r\n        backgroundColor:'#fff'\r\n\r\n    }\r\n})\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"script"}