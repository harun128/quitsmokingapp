{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _materialTopTabs = require(\"@react-navigation/material-top-tabs\");\n\nvar _Messages = _interopRequireDefault(require(\"./Messages\"));\n\nvar _MyProfile = _interopRequireDefault(require(\"./MyProfile\"));\n\nvar _Login = _interopRequireDefault(require(\"./Login\"));\n\nvar _CommunityMessagesScreen = _interopRequireDefault(require(\"./CommunityMessagesScreen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _global = require(\"../../config/global\");\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Community\\\\CommunityScreen.js\";\n\nvar Tab = (0, _materialTopTabs.createMaterialTopTabNavigator)();\n\nvar CommunityScreen = function CommunityScreen(props) {\n  var navigation = props.navigation,\n      country = props.country;\n\n  _react.default.useEffect(function () {\n    navigation.setOptions({\n      headerTitle: _18n.default.t(\"community.title\"),\n      headerStyle: {\n        backgroundColor: '#FAB045',\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 45\n      },\n      headerTitleStyle: {\n        fontWeight: 'normal',\n        fontSize: 17,\n        alignSelf: 'center'\n      },\n      headerTintColor: '#fff',\n      headerRight: function headerRight() {\n        return _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Countries\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_Box.default, {\n          mr: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: {\n            borderRadius: 999,\n            width: 25,\n            height: 25\n          },\n          source: {\n            uri: _global.global.url + \"images/flags/\" + country.img\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }\n        })));\n      }\n    });\n\n    _reactNative.StatusBar.setBarStyle('light-content');\n\n    _reactNative.StatusBar.setBackgroundColor(\"#FAB045\");\n  });\n\n  return _react.default.createElement(Tab.Navigator, {\n    initialRouteName: \"Feed\",\n    tabBarOptions: {\n      activeTintColor: '#FAB045',\n      inactiveTintColor: '#7f8c8d',\n      style: {\n        backgroundColor: '#ecf0f1',\n        borderBottomColor: 'red'\n      },\n      labelStyle: {\n        textAlign: 'center',\n        fontWeight: 'bold'\n      },\n      indicatorStyle: {\n        borderBottomColor: '#FAB045',\n        borderBottomWidth: 2\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"Topluluk\",\n    component: _CommunityMessagesScreen.default,\n    options: {\n      tabBarLabel: _18n.default.t(\"community.grup_chat\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Messages\",\n    component: _Messages.default,\n    options: {\n      tabBarLabel: _18n.default.t(\"community.messages\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Profilim\",\n    component: props.token ? _MyProfile.default : _Login.default,\n    options: {\n      tabBarLabel: props.token ? _18n.default.t(\"community.my_profile\") : _18n.default.t(\"community.sign_in\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var us = state.us;\n  return {\n    token: us.token,\n    email: us.email,\n    image: us.image,\n    country: us.country\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(CommunityScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Community/CommunityScreen.js"],"names":["Tab","CommunityScreen","props","navigation","country","React","useEffect","setOptions","headerTitle","I18n","t","headerStyle","backgroundColor","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","alignSelf","headerTintColor","headerRight","navigate","borderRadius","width","uri","global","url","img","StatusBar","setBarStyle","setBackgroundColor","activeTintColor","inactiveTintColor","style","borderBottomColor","labelStyle","textAlign","indicatorStyle","borderBottomWidth","CommunityMessagesScreen","tabBarLabel","Messages","token","MyProfile","Login","mapStateToProps","state","us","email","image"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Box from \"../../components/UI/Box\";\r\n\r\nimport {StatusBar} from \"react-native\";\r\nimport {TouchableOpacity,Image} from \"react-native\";\r\n\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport Messages from \"./Messages\";\r\nimport MyProfile from \"./MyProfile\";\r\nimport Login from \"./Login\";\r\n\r\nimport CommunityMessagesScreen from \"./CommunityMessagesScreen\";\r\nconst Tab = createMaterialTopTabNavigator();\r\nimport {connect} from \"react-redux\";\r\nimport {global} from \"../../config/global\";\r\nimport I18n from \"./../../lang/_18n\"\r\n\r\nconst CommunityScreen =(props)  =>{\r\n    const {navigation,country} = props\r\n    React.useEffect(() =>{\r\n        navigation.setOptions({\r\n                headerTitle:I18n.t(\"community.title\"),\r\n                headerStyle : {\r\n                    backgroundColor: '#FAB045',\r\n                    elevation: 0,       //remove shadow on Android\r\n                    shadowOpacity: 0,\r\n                    height:45,\r\n                },\r\n                headerTitleStyle: {\r\n                    fontWeight: 'normal',\r\n                    fontSize:17,\r\n                    alignSelf:'center'\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerRight :() => (\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Countries\")}>\r\n                        <Box mr={2}>\r\n                            <Image style={{borderRadius:999,width:25,height:25}} source={{uri:global.url+\"images/flags/\"+country.img}}/>\r\n                        </Box>\r\n                    </TouchableOpacity>\r\n                )\r\n            }\r\n        );\r\n        StatusBar.setBarStyle('light-content');\r\n        StatusBar.setBackgroundColor(\"#FAB045\");\r\n    })\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"Feed\"\r\n            tabBarOptions={{\r\n                activeTintColor: '#FAB045',\r\n                inactiveTintColor: '#7f8c8d',\r\n                style: {\r\n                    backgroundColor: '#ecf0f1',\r\n                    borderBottomColor: 'red',\r\n                },\r\n                labelStyle: {\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold'\r\n                },\r\n                indicatorStyle: {\r\n                    borderBottomColor: '#FAB045',\r\n                    borderBottomWidth: 2,\r\n                },\r\n            }}>\r\n            <Tab.Screen\r\n                name=\"Topluluk\"\r\n                component={CommunityMessagesScreen}\r\n                options={{\r\n                    tabBarLabel: I18n.t(\"community.grup_chat\"),\r\n                    // tabBarIcon: ({ color, size }) => (\r\n                    //   <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n                    // ),\r\n                }}  />\r\n            <Tab.Screen\r\n                name=\"Messages\"\r\n                component={Messages}\r\n                options={{\r\n                    tabBarLabel: I18n.t(\"community.messages\"),\r\n                    // tabBarIcon: ({ color, size }) => (\r\n                    //   <MaterialCommunityIcons name=\"settings\" color={color} size={size} />\r\n                    // ),\r\n                }} />\r\n            <Tab.Screen\r\n                name=\"Profilim\"\r\n                component={props.token ? MyProfile:Login}\r\n                options={{\r\n                    tabBarLabel:  props.token ? I18n.t(\"community.my_profile\") : I18n.t(\"community.sign_in\")\r\n                    // tabBarIcon: ({ color, size }) => (\r\n                    //   <MaterialCommunityIcons name=\"settings\" color={color} size={size} />\r\n                    // ),\r\n                }} />\r\n        </Tab.Navigator>\r\n    );\r\n}\r\n\r\nconst mapStateToProps =(state) => {\r\n    const {us} = state;\r\n    return {\r\n        token:us.token,\r\n        email:us.email,\r\n        image:us.image,\r\n        country :us.country\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CommunityScreen);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}