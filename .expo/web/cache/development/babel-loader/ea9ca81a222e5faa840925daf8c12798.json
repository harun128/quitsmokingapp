{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../UI/Text\"));\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _global = require(\"../../config/global\");\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\components\\\\mainpage\\\\MainPageLastMessages.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MainPageLastMessages = function (_React$Component) {\n  (0, _inherits2.default)(MainPageLastMessages, _React$Component);\n\n  var _super = _createSuper(MainPageLastMessages);\n\n  function MainPageLastMessages(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MainPageLastMessages);\n    _this = _super.call(this, props);\n    _this.navigation = _this.props.navigation;\n    _this.state = {\n      messages: [],\n      message: null,\n      animation: new _reactNative.Animated.Value(1)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MainPageLastMessages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var t = this;\n      this.navigation.addListener(\"focus\", function () {\n        clearInterval(t.timer);\n\n        _reactNative.AsyncStorage.getItem(\"country\").then(function (value) {\n          var country = JSON.parse(value);\n\n          _netinfo.default.fetch().then(function (state) {\n            if (state.isConnected === true) {\n              fetch(_global.global.lastMessages, {\n                method: 'POST',\n                body: JSON.stringify({\n                  id: country.id\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                _this2.setState({\n                  messages: responseJson\n                });\n\n                var t = _this2;\n                var item = t.state.messages[Math.floor(Math.random() * t.state.messages.length)];\n\n                _this2.setState({\n                  message: item\n                });\n\n                _this2.timer = setInterval(function () {\n                  var item = t.state.messages[Math.floor(Math.random() * t.state.messages.length)];\n\n                  _reactNative.Animated.timing(_this2.state.animation, {\n                    toValue: 0,\n                    timing: 400,\n                    useNativeDriver: true\n                  }).start(function () {\n                    _reactNative.Animated.timing(_this2.state.animation, {\n                      toValue: 1,\n                      duration: 400,\n                      useNativeDriver: true\n                    }).start();\n\n                    _this2.setState({\n                      message: item\n                    });\n                  });\n                }, 2500);\n              }).catch(function (error) {});\n            } else {\n              _this2.setState([{\n                username: \"Connection Failed\",\n                message: \"There is no internet connection\"\n              }]);\n            }\n          });\n        });\n      });\n      this.navigation.addListener(\"blur\", function () {\n        clearInterval(_this2.timer);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$message, _this$state$message$s, _this$state$message2;\n\n      var animatedStyle = {\n        opacity: this.state.animation\n      };\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: .75,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Box.default, {\n        mt: 3,\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        borderTopLeftRadius: 7,\n        borderTopRightRadius: 7,\n        height: 35,\n        flexDirection: 'row',\n        bg: '#FAB045',\n        alignItems: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_icons.Chat, {\n        width: 25,\n        style: {\n          marginLeft: 10\n        },\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 10,\n        textAlign: 'center',\n        color: \"white\",\n        fontWeight: 'normal',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, this.props.title))), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        height: 40,\n        py: 1,\n        bg: 'white',\n        alignItems: 'center',\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.animatedBox, animatedStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, this.state.message && _react.default.createElement(_Text.default, {\n        minHeight: 30,\n        lineHeight: 21,\n        py: 2,\n        px: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_Text.default, {\n        fontWeight: 'bold',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, \"@\", (_this$state$message = this.state.message) == null ? void 0 : (_this$state$message$s = _this$state$message.sender) == null ? void 0 : _this$state$message$s.username), ' ' + ((_this$state$message2 = this.state.message) == null ? void 0 : _this$state$message2.message)))));\n    }\n  }]);\n  return MainPageLastMessages;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  MainContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 11\n  }\n});\n\nMainPageLastMessages.propTypes = {\n  navigation: _propTypes.default.any,\n  title: _propTypes.default.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var us = state.us;\n  return {\n    country: state.us.country\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(MainPageLastMessages);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/components/mainpage/MainPageLastMessages.js"],"names":["MainPageLastMessages","props","navigation","state","messages","message","animation","Animated","Value","t","addListener","clearInterval","timer","AsyncStorage","getItem","then","value","country","JSON","parse","NetInfo","fetch","isConnected","global","lastMessages","method","body","stringify","id","response","json","responseJson","setState","item","Math","floor","random","length","setInterval","timing","toValue","useNativeDriver","start","duration","catch","error","username","animatedStyle","opacity","onPress","marginLeft","title","styles","animatedBox","sender","React","Component","StyleSheet","create","MainContainer","flex","justifyContent","alignItems","padding","propTypes","PropTypes","any","string","mapStateToProps","us"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Box from \"../UI/Box\";\r\nimport Text from \"../UI/Text\";\r\nimport {Chat} from \"../../assets/icons\";\r\nimport {TouchableOpacity, Animated,StyleSheet,AsyncStorage} from \"react-native\";\r\nimport {global} from \"../../config/global\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\";\r\nclass MainPageLastMessages extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.navigation = this.props.navigation;\r\n        this.state = {\r\n            messages : [],\r\n            message : null,\r\n            animation : new Animated.Value(1),\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        let t = this;\r\n        this.navigation.addListener(\"focus\",() =>{\r\n            clearInterval(t.timer);\r\n            AsyncStorage.getItem(\"country\").then((value) => {\r\n                let country = JSON.parse(value);\r\n                NetInfo.fetch().then(state => {\r\n                    if(state.isConnected === true) {\r\n                        fetch(global.lastMessages, {\r\n                            method: 'POST',\r\n                            body: JSON.stringify({\r\n                                id: country.id,\r\n                            })\r\n                        }).then(response => response.json()).then(responseJson => {\r\n                            this.setState({messages:responseJson});\r\n                            let t = this;\r\n                            let item = t.state.messages[Math.floor(Math.random() * t.state.messages.length)];\r\n                            this.setState({message:item});\r\n                            this.timer =setInterval(() => {\r\n                                let item = t.state.messages[Math.floor(Math.random() * t.state.messages.length)];\r\n                                Animated.timing(this.state.animation, {\r\n                                    toValue : 0,\r\n                                    timing : 400,\r\n                                    useNativeDriver:true\r\n                                }).start(()=>{\r\n                                    Animated.timing(this.state.animation,{\r\n                                        toValue : 1,\r\n                                        duration : 400,\r\n                                        useNativeDriver:true\r\n                                    }).start();\r\n                                    this.setState({message:item});\r\n                                })\r\n                            },2500);\r\n                        }).catch((error) => {\r\n\r\n                        });\r\n                    }else {\r\n                        this.setState([{username:\"Connection Failed\",message:\"There is no internet connection\"}])\r\n                    }\r\n                });\r\n            });\r\n\r\n        });\r\n        this.navigation.addListener(\"blur\",() =>{\r\n            clearInterval(this.timer);\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const animatedStyle ={\r\n            opacity : this.state.animation\r\n        }\r\n        return (\r\n            <TouchableOpacity activeOpacity={.75} onPress={this.props.onPress}>\r\n                <Box mt={3} borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                    <Box borderTopLeftRadius={7} borderTopRightRadius={7} height={35} flexDirection={'row'} bg={'#FAB045'}  alignItems={'center'}>\r\n                        <Chat width={25} style={{marginLeft:10}} color='white'/>\r\n                        <Text  ml={10} textAlign={'center'} color={\"white\"} fontWeight={'normal'} >{this.props.title}</Text>\r\n                    </Box>\r\n                </Box>\r\n                    <Box  flexDirection={'row'} height={40} py={1} bg={'white'} alignItems={'center'} borderBottomLeftRadius={5}\r\n                         borderBottomRightRadius={5}>\r\n                        <Animated.View  style={[styles.animatedBox,animatedStyle]}>\r\n                            {this.state.message &&\r\n                                <Text minHeight={30} lineHeight={21} py={2} px={2}>\r\n                                    <Text\r\n                                    fontWeight={'bold'}>@{this.state.message?.sender?.username}\r\n                                    </Text>\r\n                                    {' '+this.state.message?.message}\r\n                                </Text>\r\n                            }\r\n                        </Animated.View>\r\n                    </Box>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    MainContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems : 'center',\r\n        padding: 11\r\n\r\n    },\r\n\r\n});\r\nMainPageLastMessages.propTypes = {\r\n    navigation:PropTypes.any,\r\n    title: PropTypes.string\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const {us} = state;\r\n    return {\r\n       country:state.us.country\r\n    }\r\n}\r\nexport default  connect(mapStateToProps)(MainPageLastMessages);\r\n"]},"metadata":{},"sourceType":"script"}