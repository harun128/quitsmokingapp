{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _datetimepicker = _interopRequireDefault(require(\"@react-native-community/datetimepicker\"));\n\nvar _Box = _interopRequireDefault(require(\"../../../components/UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../../../components/UI/Text\"));\n\nvar _icons = require(\"../../../assets/icons\");\n\nvar _colors = require(\"../../../config/colors\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar UIAction = _interopRequireWildcard(require(\"../../../state/actions/UserInformation\"));\n\nvar _HealthNotifications = _interopRequireDefault(require(\"../../../utils/HealthNotifications\"));\n\nvar _AchievementsList = _interopRequireDefault(require(\"../../../config/AchievementsList\"));\n\nvar _18n = _interopRequireDefault(require(\"./../../../lang/_18n\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nrequire(\"moment/min/locales\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Settings\\\\SetSettings\\\\SetSettings.js\";\n\nvar deviceLanguage = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.SettingsManager.settings.AppleLocale || _reactNative.NativeModules.SettingsManager.settings.AppleLanguages[0] : _reactNative.NativeModules.I18nManager.localeIdentifier;\n\n_moment.default.locale(deviceLanguage);\n\nvar SetSettings = function SetSettings(props) {\n  var navigation = props.navigation,\n      route = props.route;\n  navigation.setOptions({\n    title: _18n.default.t(\"settings.titles.informations\"),\n    headerStyle: {\n      elevation: 0,\n      shadowOpacity: 0,\n      height: 45\n    },\n    headerTitleStyle: {\n      fontWeight: 'normal',\n      fontSize: 17\n    },\n    headerRight: function headerRight() {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          paddingRight: 10,\n          paddingLeft: 25,\n          paddingVertical: 20\n        },\n        onPress: function onPress() {\n          return save();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_icons.CheckIcon, {\n        color: _colors.colors.birlesikKelimeMedium,\n        style: {\n          paddingLeft: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }));\n    }\n  });\n\n  var save = function save() {\n    var value, hn, an;\n    return _regenerator.default.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            value = {\n              'date': date,\n              'smokingCountPerDay': smokingCountPerDay,\n              'countCigaretteInPocket': countCigaretteInPocket,\n              'wasteTime': wasteTime,\n              'price': price\n            };\n\n            if (!(smokingCountPerDay > 0 && countCigaretteInPocket >= 0 && wasteTime > 0 && price > 0 && date)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 5;\n            return _regenerator.default.awrap(_reactNative.AsyncStorage.multiSet([['date', value.date.toString()], ['smokingCountPerDay', value.smokingCountPerDay.toString()], ['countCigaretteInPocket', value.countCigaretteInPocket.toString()], ['wasteTime', value.wasteTime.toString()], ['price', value.price.toString()]], function () {}));\n\n          case 5:\n            UIAction.setDate(date);\n            UIAction.setSmokingCountPerDay(smokingCountPerDay);\n            UIAction.setCountCigaretteInPocket(countCigaretteInPocket);\n            UIAction.setWasteTime(wasteTime);\n            UIAction.setPrice(price);\n\n            if (JSON.parse(props.healthNotification) === true) {\n              hn = new _HealthNotifications.default(date);\n              hn.setScheduled();\n            }\n\n            if (JSON.parse(props.achievementsNotification) === true) {\n              an = new _AchievementsList.default(date, smokingCountPerDay, countCigaretteInPocket, price, props.currency);\n              an.setScheduled();\n            }\n\n            navigation.goBack();\n            _context.next = 16;\n            break;\n\n          case 15:\n            alert(\"Lütfen boş alan bırakmayınız.\");\n\n          case 16:\n            _context.next = 20;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  var _React$useState = _react.default.useState(new Date(props.date)),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      date = _React$useState2[0],\n      setDate = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState('date'),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      mode = _React$useState4[0],\n      setMode = _React$useState4[1];\n\n  var _React$useState5 = _react.default.useState(false),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      show = _React$useState6[0],\n      setShow = _React$useState6[1];\n\n  var _React$useState7 = _react.default.useState(props.smokingCountPerDay),\n      _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n      smokingCountPerDay = _React$useState8[0],\n      setSmokingCountPerDay = _React$useState8[1];\n\n  var _React$useState9 = _react.default.useState(props.countCigaretteInPocket),\n      _React$useState10 = (0, _slicedToArray2.default)(_React$useState9, 2),\n      countCigaretteInPocket = _React$useState10[0],\n      setCountCigaretteInPocket = _React$useState10[1];\n\n  var _React$useState11 = _react.default.useState(props.wasteTime),\n      _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),\n      wasteTime = _React$useState12[0],\n      setWasteTime = _React$useState12[1];\n\n  var _React$useState13 = _react.default.useState(props.price),\n      _React$useState14 = (0, _slicedToArray2.default)(_React$useState13, 2),\n      price = _React$useState14[0],\n      setPrice = _React$useState14[1];\n\n  _react.default.useEffect(function () {\n    _reactNative.AsyncStorage.setItem(\"installed\", JSON.stringify(true));\n  });\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(_reactNative.Platform.OS === 'ios');\n\n    if (selectedDate > new Date().getTime()) {\n      alert(\"Sonraki bir tarihi seçemezsiniz\");\n    } else {\n      setDate(currentDate);\n    }\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  var state = {\n    a: 20,\n    b: 20,\n    c: 20,\n    d: 20\n  };\n\n  var setNumber = function setNumber(text) {\n    text = text.replace('.', '');\n    text = text.replace(',', '');\n    text = text.replace('-', '');\n    text = text.replace(' ', '');\n    return text;\n  };\n\n  var setDecimal = function setDecimal(text) {\n    text = text.replace(\",\", \".\");\n    text = text.replace('-', '');\n    text = text.replace(' ', '');\n    return text;\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_Box.default, {\n    bg: 'white',\n    mt: 15,\n    pt: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Text.default, {\n    textAlign: 'center',\n    pb: 2,\n    borderBottomWidth: 1,\n    borderColor: '#ddd',\n    color: _colors.colors.text_color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, _18n.default.t(\"settings.smoke_count_daily\")), _react.default.createElement(_Box.default, {\n    borderWidth: smokingCountPerDay <= 0 ? 1 : 0,\n    borderColor: smokingCountPerDay <= 0 ? \"red\" : \"\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setSmokingCountPerDay(setNumber(text));\n    },\n    defaultValue: props.smokingCountPerDay.toString(),\n    placeholder: '0',\n    keyboardType: 'numeric',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }))), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    mt: 15,\n    pt: 15,\n    justifyContent: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Text.default, {\n    textAlign: 'center',\n    pb: 2,\n    borderBottomWidth: 1,\n    borderColor: '#ddd',\n    color: _colors.colors.text_color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, _18n.default.t(\"settings.cigarette_count_in_pocket\")), _react.default.createElement(_Box.default, {\n    borderWidth: countCigaretteInPocket <= 0 ? 1 : 0,\n    borderColor: countCigaretteInPocket <= 0 ? \"red\" : \"\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setCountCigaretteInPocket(setNumber(text));\n    },\n    defaultValue: props.countCigaretteInPocket.toString(),\n    as: _Text.default,\n    placeholder: '0',\n    keyboardType: 'numeric',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }))), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    mt: 15,\n    pt: 15,\n    justifyContent: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Text.default, {\n    textAlign: 'center',\n    pb: 2,\n    borderBottomWidth: 1,\n    borderColor: '#ddd',\n    color: _colors.colors.text_color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, _18n.default.t(\"settings.duration_smoking\")), _react.default.createElement(_Box.default, {\n    borderWidth: wasteTime <= 0 ? 1 : 0,\n    borderColor: wasteTime <= 0 ? \"red\" : \"\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setWasteTime(setNumber(text));\n    },\n    defaultValue: props.wasteTime.toString(),\n    as: _Text.default,\n    placeholder: '0',\n    keyboardType: 'numeric',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }))), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    mt: 15,\n    pt: 15,\n    justifyContent: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Text.default, {\n    textAlign: 'center',\n    pb: 2,\n    borderBottomWidth: 1,\n    borderColor: '#ddd',\n    color: _colors.colors.text_color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, _18n.default.t(\"settings.cost_cigarette\")), _react.default.createElement(_Box.default, {\n    borderWidth: price <= 0 ? 1 : 0,\n    borderColor: price <= 0 ? \"red\" : \"\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setPrice(setDecimal(text));\n    },\n    value: price,\n    defaultValue: props.price.toString(),\n    as: _Text.default,\n    placeholder: '0',\n    keyboardType: 'numeric',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }))), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    mt: 15,\n    pt: 15,\n    justifyContent: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Text.default, {\n    textAlign: 'center',\n    pb: 2,\n    borderBottomWidth: 1,\n    borderColor: '#ddd',\n    color: _colors.colors.text_color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, _18n.default.t(\"settings.quit_date\")), _react.default.createElement(_Box.default, {\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Box.default, {\n    flexDirection: 'row',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_Box.default, {\n    flex: 1,\n    alignItems: 'center',\n    py: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, _react.default.createElement(_Text.default, {\n    fontWeight: 'bold',\n    color: '#3598DB',\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 37\n    }\n  }, date && _react.default.createElement(_Text.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, (0, _moment.default)(date).format('MMMM Do YYYY'))))), _react.default.createElement(_Box.default, {\n    flex: 1,\n    alignItems: 'center',\n    py: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, _react.default.createElement(_Text.default, {\n    fontWeight: 'bold',\n    color: '#3598DB',\n    onPress: showTimepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, (0, _moment.default)(date).format('HH:mm'))), show && _react.default.createElement(_datetimepicker.default, {\n    testID: \"dateTimePicker\",\n    timeZoneOffsetInMinutes: 0,\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  item: {\n    paddingVertical: 10\n  },\n  bottomLine: {\n    height: 1,\n    marginLeft: 3,\n    backgroundColor: '#ddd'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var ui = state.ui;\n  return {\n    date: ui.date,\n    wasteTime: ui.wasteTime,\n    smokingCountPerDay: ui.smokingCountPerDay,\n    countCigaretteInPocket: ui.countCigaretteInPocket,\n    price: ui.price,\n    currency: ui.currency,\n    healthNotification: ui.healthNotification,\n    achievementsNotification: ui.achievementsNotification\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(SetSettings);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Settings/SetSettings/SetSettings.js"],"names":["deviceLanguage","Platform","OS","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","moment","locale","SetSettings","props","navigation","route","setOptions","title","I18n","t","headerStyle","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","headerRight","paddingRight","paddingLeft","paddingVertical","save","colors","birlesikKelimeMedium","value","date","smokingCountPerDay","countCigaretteInPocket","wasteTime","price","AsyncStorage","multiSet","toString","UIAction","setDate","setSmokingCountPerDay","setCountCigaretteInPocket","setWasteTime","setPrice","JSON","parse","healthNotification","hn","HealthNotifications","setScheduled","achievementsNotification","an","AchievementsList","currency","goBack","alert","React","useState","Date","mode","setMode","show","setShow","useEffect","setItem","stringify","onChange","event","selectedDate","currentDate","getTime","showMode","currentMode","showDatepicker","showTimepicker","state","a","b","c","d","setNumber","text","replace","setDecimal","text_color","Text","format","styles","StyleSheet","create","item","bottomLine","marginLeft","backgroundColor","mapStateToProps","ui"],"mappings":"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","sourcesContent":["import React from'react'\r\nimport {TouchableOpacity, SafeAreaView, StyleSheet, TextInput, AsyncStorage, ScrollView, Platform,NativeModules} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport Box from \"../../../components/UI/Box\";\r\nimport Text from \"../../../components/UI/Text\";\r\n\r\nimport {CheckIcon, Share} from \"../../../assets/icons\";\r\nimport {colors} from \"../../../config/colors\";\r\n\r\n\r\n\r\n\r\nimport {connect} from \"react-redux\";\r\nimport *as UIAction from \"../../../state/actions/UserInformation\";\r\nimport HealthNotifications from \"../../../utils/HealthNotifications\";\r\nimport AchievementsList from \"../../../config/AchievementsList\";\r\nimport I18n from \"./../../../lang/_18n\"\r\n\r\nimport moment from 'moment'\r\nimport \"moment/min/locales\";\r\nconst deviceLanguage =\r\n    Platform.OS === 'ios'\r\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\r\n        NativeModules.SettingsManager.settings.AppleLanguages[0] //iOS 13\r\n        : NativeModules.I18nManager.localeIdentifier;\r\n\r\n\r\nmoment.locale(deviceLanguage);\r\n\r\n\r\n\r\nconst SetSettings =  (props) => {\r\n    const {navigation, route} = props;\r\n\r\n    navigation.setOptions({\r\n        title: I18n.t(\"settings.titles.informations\"),\r\n        headerStyle: {\r\n            elevation: 0,       //remove shadow on Android\r\n            shadowOpacity: 0,\r\n            height: 45,\r\n        },\r\n        headerTitleStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 17,\r\n        },\r\n        headerRight: () => (\r\n            <TouchableOpacity style={{paddingRight: 10,paddingLeft:25, paddingVertical: 20}} onPress={() => save()}>\r\n                <CheckIcon color={colors.birlesikKelimeMedium} style={{paddingLeft: 15}}/>\r\n            </TouchableOpacity>\r\n        )\r\n    });\r\n\r\n    const save = async () => {\r\n        try{\r\n            const value = {\r\n                'date': date,\r\n                'smokingCountPerDay': smokingCountPerDay,\r\n                'countCigaretteInPocket': countCigaretteInPocket,\r\n                'wasteTime': wasteTime,\r\n                'price': price\r\n            }\r\n            if(smokingCountPerDay > 0 && countCigaretteInPocket >= 0 && wasteTime >0 && price >0 && date){\r\n                await AsyncStorage.multiSet([\r\n                        ['date',value.date.toString()],\r\n                        ['smokingCountPerDay',value.smokingCountPerDay.toString()],\r\n                        ['countCigaretteInPocket',value.countCigaretteInPocket.toString()],\r\n                        ['wasteTime',value.wasteTime.toString()],\r\n                        ['price',value.price.toString()]\r\n                    ],\r\n                    ()=>{}\r\n                )\r\n\r\n                UIAction.setDate(date);\r\n                UIAction.setSmokingCountPerDay(smokingCountPerDay);\r\n                UIAction.setCountCigaretteInPocket(countCigaretteInPocket);\r\n                UIAction.setWasteTime(wasteTime);\r\n                UIAction.setPrice(price);\r\n                if(JSON.parse(props.healthNotification) === (true)) {\r\n                    const hn = new HealthNotifications(date);\r\n                    hn.setScheduled();\r\n                }\r\n                if(JSON.parse(props.achievementsNotification) === true) {\r\n                    const an = new AchievementsList(date,smokingCountPerDay,countCigaretteInPocket,price,props.currency);\r\n                    an.setScheduled()\r\n                }\r\n                //navigation.navigate('Settings');\r\n                navigation.goBack();\r\n            } else {\r\n                alert(\"Lütfen boş alan bırakmayınız.\");\r\n            }\r\n        } catch(e) {\r\n\r\n        }\r\n    }\r\n\r\n    const [date, setDate] = React.useState(new Date(props.date));\r\n    const [mode, setMode] = React.useState('date');\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const [smokingCountPerDay, setSmokingCountPerDay] = React.useState(props.smokingCountPerDay);\r\n    const [countCigaretteInPocket, setCountCigaretteInPocket] = React.useState(props.countCigaretteInPocket);\r\n    const [wasteTime, setWasteTime] = React.useState(props.wasteTime);\r\n    const [price, setPrice] = React.useState(props.price);\r\n\r\n    React.useEffect(() => {\r\n        AsyncStorage.setItem(\"installed\",JSON.stringify(true));\r\n    });\r\n\r\n    const onChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n\r\n        setShow(Platform.OS === 'ios');\r\n        if (selectedDate > (new Date().getTime())) {\r\n            alert(\"Sonraki bir tarihi seçemezsiniz\")\r\n        } else {\r\n            setDate(currentDate);\r\n        }\r\n    };\r\n\r\n    const showMode = currentMode => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n\r\n    const showTimepicker = () => {\r\n        showMode('time');\r\n    };\r\n\r\n    const state = {\r\n        a: 20, b: 20, c: 20, d: 20\r\n    }\r\n\r\n    const setNumber = (text) => {\r\n        text = text.replace('.', '');\r\n        text = text.replace(',', '');\r\n        text = text.replace('-', '');\r\n        text = text.replace(' ', '');\r\n        return text;\r\n    }\r\n\r\n    const setDecimal = (text) => {\r\n\r\n        text = text.replace(\",\",\".\");\r\n        text = text.replace('-', '');\r\n        text = text.replace(' ', '');\r\n        return text;\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                <Box bg={'white'} mt={15} pt={15}>\r\n                    <Text textAlign={'center'} pb={2} borderBottomWidth={1} borderColor={'#ddd'} color={colors.text_color}>{I18n.t(\"settings.smoke_count_daily\")}</Text>\r\n                    <Box borderWidth={smokingCountPerDay <=0 ? 1 : 0} borderColor={smokingCountPerDay <=0 ? \"red\" : \"\"} justifyContent={'center'} alignItems={'center'}>\r\n                        <TextInput\r\n\r\n                            onChangeText={(text) => setSmokingCountPerDay(setNumber(text))}\r\n                            defaultValue={props.smokingCountPerDay.toString()} placeholder={'0'}\r\n                            keyboardType={'numeric'}/>\r\n                    </Box>\r\n                </Box>\r\n                <Box bg={'white'} mt={15} pt={15} justifyContent={'center'}>\r\n                    <Text textAlign={'center'} pb={2} borderBottomWidth={1} borderColor={'#ddd'} color={colors.text_color}>{I18n.t(\"settings.cigarette_count_in_pocket\")}</Text>\r\n                    <Box borderWidth={countCigaretteInPocket <=0 ? 1 : 0} borderColor={countCigaretteInPocket <=0 ? \"red\" : \"\"} justifyContent={'center'} alignItems={'center'}>\r\n                        <TextInput onChangeText={(text) => setCountCigaretteInPocket(setNumber(text))}\r\n                                   defaultValue={props.countCigaretteInPocket.toString()} as={Text} placeholder={'0'}\r\n                                   keyboardType={'numeric'}/>\r\n                    </Box>\r\n                </Box>\r\n                <Box bg={'white'} mt={15} pt={15} justifyContent={'center'}>\r\n                    <Text textAlign={'center'} pb={2} borderBottomWidth={1} borderColor={'#ddd'} color={colors.text_color}>{I18n.t(\"settings.duration_smoking\")}</Text>\r\n                    <Box borderWidth={wasteTime <=0 ? 1 : 0} borderColor={wasteTime <=0 ? \"red\" : \"\"} justifyContent={'center'} alignItems={'center'}>\r\n                        <TextInput onChangeText={(text) => setWasteTime(setNumber(text))} defaultValue={props.wasteTime.toString()} as={Text}\r\n                                   placeholder={'0'} keyboardType={'numeric'}/>\r\n                    </Box>\r\n                </Box>\r\n                <Box bg={'white'} mt={15} pt={15} justifyContent={'center'}>\r\n                    <Text textAlign={'center'} pb={2} borderBottomWidth={1} borderColor={'#ddd'} color={colors.text_color}>{I18n.t(\"settings.cost_cigarette\")}</Text>\r\n                    <Box borderWidth={price <=0 ? 1 : 0} borderColor={price <=0 ? \"red\" : \"\"}  justifyContent={'center'} alignItems={'center'}>\r\n                        <TextInput onChangeText={(text) => setPrice(setDecimal(text))} value={price} defaultValue={props.price.toString()} as={Text}\r\n                                   placeholder={'0'} keyboardType={'numeric'}/>\r\n                    </Box>\r\n                </Box>\r\n                <Box bg={'white'} mt={15} pt={15} justifyContent={'center'}>\r\n                    <Text textAlign={'center'} pb={2} borderBottomWidth={1} borderColor={'#ddd'} color={colors.text_color}>{I18n.t(\"settings.quit_date\")}</Text>\r\n                    <Box justifyContent={'center'} alignItems={'center'}>\r\n                        <Box flexDirection={'row'}>\r\n                            <Box flex={1} alignItems={'center'} py={15}>\r\n                                <TouchableOpacity>\r\n                                    <Text fontWeight={'bold'} color={'#3598DB'} onPress={showDatepicker}>{date &&\r\n                                    (\r\n                                        <Text>{\r\n                                            moment(date).format('MMMM Do YYYY')\r\n                                        }</Text>\r\n                                    )}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </Box>\r\n                            <Box flex={1} alignItems={'center'} py={15}>\r\n\r\n                                <Text fontWeight={'bold'} color={'#3598DB'} onPress={showTimepicker}>\r\n                                    {moment(date).format('HH:mm')}\r\n                                </Text>\r\n\r\n                            </Box>\r\n                            {show && (\r\n                                <DateTimePicker\r\n\r\n                                    testID=\"dateTimePicker\"\r\n                                    timeZoneOffsetInMinutes={0}\r\n                                    value={date}\r\n                                    mode={mode}\r\n                                    is24Hour={true}\r\n                                    display=\"default\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            )}\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles= StyleSheet.create({\r\n    item : {\r\n        paddingVertical:10\r\n    },\r\n    bottomLine : {\r\n        height:1,\r\n        marginLeft:3,\r\n        backgroundColor:'#ddd'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {ui} = state;\r\n    return {\r\n        date: ui.date,\r\n        wasteTime: ui.wasteTime,\r\n        smokingCountPerDay: ui.smokingCountPerDay,\r\n        countCigaretteInPocket: ui.countCigaretteInPocket,\r\n        price: ui.price,\r\n        currency:ui.currency,\r\n        healthNotification: ui.healthNotification,\r\n        achievementsNotification: ui.achievementsNotification\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(SetSettings);\r\n"]},"metadata":{},"sourceType":"script"}