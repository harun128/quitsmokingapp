{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../../components/UI/Box\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _Text = _interopRequireDefault(require(\"../../../components/UI/Text\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSimpleDialogs = require(\"react-native-simple-dialogs\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _AchievementsList = _interopRequireDefault(require(\"../../../config/AchievementsList\"));\n\nvar _HealthNotifications = _interopRequireDefault(require(\"../../../utils/HealthNotifications\"));\n\nvar _UserInformation = require(\"../../../state/actions/UserInformation\");\n\nvar _18n = _interopRequireDefault(require(\"./../../../lang/_18n\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Settings\\\\Notifications\\\\NotificationSettings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NotificationSettings = function (_React$Component) {\n  (0, _inherits2.default)(NotificationSettings, _React$Component);\n\n  var _super = _createSuper(NotificationSettings);\n\n  function NotificationSettings(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, NotificationSettings);\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        healthNotification = _this$props.healthNotification,\n        achievementsNotification = _this$props.achievementsNotification;\n    _this.state = {\n      health: '',\n      achievements: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(NotificationSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setOptions({\n        title: _18n.default.t(\"settings.titles.notification_settings\")\n      });\n      var _this$props2 = this.props,\n          healthNotification = _this$props2.healthNotification,\n          achievementsNotification = _this$props2.achievementsNotification;\n      this.setState({\n        health: JSON.parse(healthNotification),\n        achievements: JSON.parse(achievementsNotification)\n      });\n    }\n  }, {\n    key: \"setAchievementsState\",\n    value: function setAchievementsState(value) {\n      var an = new _AchievementsList.default(this.props.date, this.props.smokingCountPerDay, this.props.countCigaretteInPocket, this.props.price);\n\n      if (value == true) {\n        an.setScheduled();\n      } else {\n        an.removeNotification();\n      }\n\n      (0, _UserInformation.setAchievementsNotification)(JSON.stringify(value));\n      this.setState({\n        achievements: value\n      });\n    }\n  }, {\n    key: \"setHealthState\",\n    value: function setHealthState(value) {\n      var hn = new _HealthNotifications.default(this.props.date);\n\n      if (value == true) {\n        hn.setScheduled();\n      } else {\n        hn.cancelHealthNotification();\n      }\n\n      (0, _UserInformation.setHealthNotification)(JSON.stringify(value));\n      this.setState({\n        health: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Box.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 0.7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        alignItems: 'center',\n        my: 3,\n        mx: 2,\n        py: 3,\n        px: 3,\n        justifyContent: 'center',\n        borderBottomWidth: 1,\n        borderColor: '#ddd',\n        bg: \"white\",\n        borderRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_Text.default, {\n        flex: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, _18n.default.t(\"settings.health_notification\")), _react.default.createElement(_reactNativeSimpleDialogs.TouchableEffect, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNativeGestureHandler.Switch, {\n        onValueChange: function onValueChange(value) {\n          return _this2.setHealthState(value);\n        },\n        value: this.state.health,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      })))), _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 0.7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        alignItems: 'center',\n        mx: 2,\n        py: 3,\n        px: 3,\n        justifyContent: 'center',\n        borderBottomWidth: 1,\n        borderColor: '#ddd',\n        bg: \"white\",\n        borderRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_Text.default, {\n        flex: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, _18n.default.t(\"settings.achievements_notification\")), _react.default.createElement(_reactNativeSimpleDialogs.TouchableEffect, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNativeGestureHandler.Switch, {\n        onValueChange: function onValueChange(value) {\n          return _this2.setAchievementsState(value);\n        },\n        value: this.state.achievements,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n  return NotificationSettings;\n}(_react.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var ui = state.ui;\n  return {\n    date: ui.date,\n    wasteTime: ui.wasteTime,\n    smokingCountPerDay: ui.smokingCountPerDay,\n    countCigaretteInPocket: ui.countCigaretteInPocket,\n    price: ui.price,\n    achievementsNotification: ui.achievementsNotification,\n    healthNotification: ui.healthNotification\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(NotificationSettings);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Settings/Notifications/NotificationSettings.js"],"names":["NotificationSettings","props","healthNotification","achievementsNotification","state","health","achievements","navigation","setOptions","title","I18n","t","setState","JSON","parse","value","an","AchievementsList","date","smokingCountPerDay","countCigaretteInPocket","price","setScheduled","removeNotification","stringify","hn","HealthNotifications","cancelHealthNotification","setHealthState","setAchievementsState","React","Component","mapStateToProps","ui","wasteTime"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Box from \"../../../components/UI/Box\";\r\nimport {Switch} from \"react-native-gesture-handler\";\r\nimport Text from \"../../../components/UI/Text\";\r\nimport {TouchableOpacity,SafeAreaView} from \"react-native\";\r\nimport {TouchableEffect} from \"react-native-simple-dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport AchievementsList from \"../../../config/AchievementsList\";\r\nimport HealthNotifications from \"../../../utils/HealthNotifications\";\r\nimport {setAchievementsNotification,setHealthNotification} from \"../../../state/actions/UserInformation\";\r\n\r\nimport I18n from \"./../../../lang/_18n\"\r\n\r\nclass NotificationSettings extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const {healthNotification,achievementsNotification} = this.props;\r\n        this.state= {\r\n            health:'',\r\n            achievements:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.navigation.setOptions({\r\n            title : I18n.t(\"settings.titles.notification_settings\")\r\n        });\r\n        const {healthNotification,achievementsNotification} = this.props;\r\n\r\n        this.setState({health:JSON.parse(healthNotification),achievements:JSON.parse(achievementsNotification)});\r\n\r\n        // AsyncStorage.multiGet([\"healthNotification\",\"achievementsNotification\"]).then((result) => {\r\n        //     let healthNotification = JSON.parse(result[0][1]);\r\n        //     let achievementsNotification = JSON.parse(result[1][1]);\r\n        //\r\n        //     if(healthNotification == null || achievementsNotification == null) {\r\n        //         AsyncStorage.setItem(\"healthNotification\",JSON.stringify(true));\r\n        //         AsyncStorage.setItem(\"achievementsNotification\",JSON.stringify(true));\r\n        //         this.setState({health:(true),achievements:(true)});\r\n        //     } else {\r\n        //         this.setState({health:healthNotification,achievements:achievementsNotification});\r\n        //     }\r\n        // });\r\n    }\r\n    setAchievementsState(value) {\r\n\r\n        let an = new AchievementsList(this.props.date,this.props.smokingCountPerDay,this.props.countCigaretteInPocket,this.props.price);\r\n        if(value == true) {\r\n            an.setScheduled();\r\n        } else {\r\n            an.removeNotification();\r\n        }\r\n        setAchievementsNotification(JSON.stringify(value));\r\n        this.setState({achievements:value});\r\n    }\r\n\r\n    setHealthState(value) {\r\n        let hn = new HealthNotifications(this.props.date);\r\n        if(value == true) {\r\n            hn.setScheduled();\r\n        } else {\r\n            hn.cancelHealthNotification();\r\n        }\r\n        setHealthNotification(JSON.stringify(value));\r\n        this.setState({health:value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SafeAreaView>\r\n                <Box>\r\n                    <TouchableOpacity activeOpacity={0.7}>\r\n                        <Box flexDirection={'row'} alignItems={'center'} my={3} mx={2}  py={3} px={3} justifyContent ={'center'} borderBottomWidth={1} borderColor={'#ddd'} bg={\"white\"} borderRadius={5}>\r\n                            <Text flex={1}>{I18n.t(\"settings.health_notification\")}</Text>\r\n                            <TouchableEffect>\r\n                                <Switch\r\n                                    onValueChange={(value) => this.setHealthState(value)}\r\n                                    value = {this.state.health}/>\r\n                            </TouchableEffect>\r\n                        </Box>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity activeOpacity={0.7}>\r\n                        <Box flexDirection={'row'} alignItems={'center'}  mx={2}  py={3} px={3} justifyContent ={'center'} borderBottomWidth={1} borderColor={'#ddd'} bg={\"white\"} borderRadius={5}>\r\n                            <Text flex={1}>{I18n.t(\"settings.achievements_notification\")}</Text>\r\n                            <TouchableEffect>\r\n                                <Switch\r\n                                    onValueChange={(value) => this.setAchievementsState(value)}\r\n                                    value = {this.state.achievements}/>\r\n                            </TouchableEffect>\r\n                        </Box>\r\n                    </TouchableOpacity>\r\n                </Box>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {ui} = state;\r\n    return {\r\n        date: ui.date,\r\n        wasteTime: ui.wasteTime,\r\n        smokingCountPerDay: ui.smokingCountPerDay,\r\n        countCigaretteInPocket: ui.countCigaretteInPocket,\r\n        price: ui.price,\r\n        achievementsNotification:ui.achievementsNotification,\r\n        healthNotification:ui.healthNotification\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps)(NotificationSettings)\r\n"]},"metadata":{},"sourceType":"script"}