{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _reactNative = require(\"react-native\");\n\nvar StatusBarManager = function StatusBarManager(_ref) {\n  var presentationStyle = _ref.presentationStyle;\n\n  if (_reactNative.Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n    return null;\n  }\n\n  _reactNative.StatusBar.setHidden(true);\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      return _reactNative.StatusBar.setHidden(false);\n    };\n  }, []);\n  return null;\n};\n\nvar _default = StatusBarManager;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/node_modules/react-native-image-viewing/dist/components/StatusBarManager.js"],"names":["StatusBarManager","presentationStyle","Platform","OS","StatusBar","setHidden"],"mappings":";;;;;AAAA;;AACA;;AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4B;AAAA,MAAzBC,iBAAyB,QAAzBA,iBAAyB;;AACjD,MAAIC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBF,iBAAiB,KAAK,gBAAnD,EAAqE;AACjE,WAAO,IAAP;AACH;;AAEDG,yBAAUC,SAAV,CAAoB,IAApB;;AACA,wBAAU,YAAM;AACZ,WAAO;AAAA,aAAMD,uBAAUC,SAAV,CAAoB,KAApB,CAAN;AAAA,KAAP;AACH,GAFD,EAEG,EAFH;AAGA,SAAO,IAAP;AACH,CAVD;;eAWeL,gB","sourcesContent":["import { useEffect } from \"react\";\nimport { Platform, StatusBar, } from \"react-native\";\nconst StatusBarManager = ({ presentationStyle, }) => {\n    if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n        return null;\n    }\n    //Can't get an actual state of app status bar with default RN. Gonna rely on \"presentationStyle === overFullScreen\" prop and guess application status bar state to be visible in this case.\n    StatusBar.setHidden(true);\n    useEffect(() => {\n        return () => StatusBar.setHidden(false);\n    }, []);\n    return null;\n};\nexport default StatusBarManager;\n"]},"metadata":{},"sourceType":"script"}