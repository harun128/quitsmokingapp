{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar useImageIndexChange = function useImageIndexChange(imageIndex, screen) {\n  var _useState = (0, _react.useState)(imageIndex),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentImageIndex = _useState2[0],\n      setImageIndex = _useState2[1];\n\n  var onScroll = function onScroll(event) {\n    var scrollX = event.nativeEvent.contentOffset.x;\n\n    if (screen.width) {\n      var nextIndex = Math.round(scrollX / screen.width);\n      setImageIndex(nextIndex < 0 ? 0 : nextIndex);\n    }\n  };\n\n  return [currentImageIndex, onScroll];\n};\n\nvar _default = useImageIndexChange;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/node_modules/react-native-image-viewing/dist/hooks/useImageIndexChange.js"],"names":["useImageIndexChange","imageIndex","screen","currentImageIndex","setImageIndex","onScroll","event","scrollX","nativeEvent","contentOffset","x","width","nextIndex","Math","round"],"mappings":";;;;;;;;;AAOA;;AACA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAaC,MAAb,EAAwB;AAAA,kBACL,qBAASD,UAAT,CADK;AAAA;AAAA,MACzCE,iBADyC;AAAA,MACtBC,aADsB;;AAEhD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,QACmBC,OADnB,GACqCD,KADrC,CAChBE,WADgB,CACDC,aADC,CACgBC,CADhB;;AAExB,QAAIR,MAAM,CAACS,KAAX,EAAkB;AACd,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,GAAGL,MAAM,CAACS,KAA5B,CAAlB;AACAP,MAAAA,aAAa,CAACQ,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoBA,SAArB,CAAb;AACH;AACJ,GAND;;AAOA,SAAO,CAACT,iBAAD,EAAoBE,QAApB,CAAP;AACH,CAVD;;eAWeL,mB","sourcesContent":["/**\n * Copyright (c) JOB TODAY S.A. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useState } from \"react\";\nconst useImageIndexChange = (imageIndex, screen) => {\n    const [currentImageIndex, setImageIndex] = useState(imageIndex);\n    const onScroll = (event) => {\n        const { nativeEvent: { contentOffset: { x: scrollX }, }, } = event;\n        if (screen.width) {\n            const nextIndex = Math.round(scrollX / screen.width);\n            setImageIndex(nextIndex < 0 ? 0 : nextIndex);\n        }\n    };\n    return [currentImageIndex, onScroll];\n};\nexport default useImageIndexChange;\n"]},"metadata":{},"sourceType":"script"}