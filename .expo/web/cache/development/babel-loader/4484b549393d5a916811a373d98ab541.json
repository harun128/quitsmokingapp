{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _global = require(\"../../config/global\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _UserSession = require(\"../../state/actions/UserSession\");\n\nvar _CountryItem = _interopRequireDefault(require(\"../../components/CustomLists/CountryItem\"));\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Community\\\\Countries.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Countries = function (_React$Component) {\n  (0, _inherits2.default)(Countries, _React$Component);\n\n  var _super = _createSuper(Countries);\n\n  function Countries(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Countries);\n    _this = _super.call(this, props);\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return _react.default.createElement(_CountryItem.default, {\n        name: item.name,\n        flag: item.img,\n        selected: _this.props.country.name,\n        onPress: function onPress() {\n          return _this._onChangeCountry(item);\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      countries: []\n    };\n\n    _this.props.navigation.setOptions({\n      headerTitle: _18n.default.t(\"community.countries\"),\n      headerStyle: {\n        backgroundColor: '#FAB045',\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 45\n      },\n      headerTitleStyle: {\n        fontWeight: 'normal',\n        fontSize: 17,\n        alignSelf: 'center'\n      },\n      headerTintColor: '#fff',\n      headerRight: function headerRight() {\n        return _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: {\n            paddingRight: 10\n          },\n          onPress: function onPress() {\n            return save();\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        });\n      }\n    });\n\n    var state = (0, _assertThisInitialized2.default)(_this);\n    fetch(_global.global.countries, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      state.setState({\n        countries: responseJson\n      });\n    }).catch(function (error) {});\n    return _this;\n  }\n\n  (0, _createClass2.default)(Countries, [{\n    key: \"_onChangeCountry\",\n    value: function _onChangeCountry(item) {\n      (0, _UserSession.setCountry)(item);\n      this.props.navigation.navigate(\"CommunityScreen\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_Box.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.countries,\n        renderItem: this._renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return Countries;\n}(_react.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var us = state.us;\n  return {\n    country: us.country\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(Countries);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Community/Countries.js"],"names":["Countries","props","_renderItem","item","index","name","img","country","_onChangeCountry","state","countries","navigation","setOptions","headerTitle","I18n","t","headerStyle","backgroundColor","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","alignSelf","headerTintColor","headerRight","paddingRight","save","fetch","global","method","headers","Accept","then","response","json","responseJson","setState","catch","error","navigate","React","Component","mapStateToProps","us"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Box from \"../../components/UI/Box\";\r\nimport {TouchableOpacity,FlatList} from \"react-native\";\r\nimport {global} from \"../../config/global\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCountry} from \"../../state/actions/UserSession\";\r\nimport CountryItem from \"../../components/CustomLists/CountryItem\";\r\nimport I18n from \"./../../lang/_18n\"\r\nclass Countries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            countries :[]\r\n        }\r\n\r\n        this.props.navigation.setOptions({\r\n            headerTitle:I18n.t(\"community.countries\"),\r\n            headerStyle : {\r\n                backgroundColor: '#FAB045',\r\n                elevation: 0,       //remove shadow on Android\r\n                shadowOpacity: 0,\r\n                height:45,\r\n            },\r\n            headerTitleStyle: {\r\n                fontWeight: 'normal',\r\n                fontSize:17,\r\n                alignSelf:'center'\r\n            },\r\n            headerTintColor: '#fff',\r\n            headerRight :() => (\r\n                <TouchableOpacity style={{paddingRight: 10}} onPress={() => save()}>\r\n                    {/*<CheckIcon color={\"white\"} style={{paddingLeft: 15}}/>*/}\r\n                </TouchableOpacity>\r\n            )\r\n        });\r\n\r\n        let state = this;\r\n        fetch(global.countries, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json()).then(responseJson => {\r\n            state.setState({countries:responseJson});\r\n        }).catch((error) => {\r\n        });\r\n    }\r\n\r\n    _onChangeCountry(item) {\r\n        setCountry(item);\r\n        this.props.navigation.navigate(\"CommunityScreen\");\r\n    }\r\n\r\n    _renderItem = ({item,index}) => {\r\n        return (\r\n            <CountryItem\r\n                name={item.name}\r\n                flag={item.img}\r\n                selected={this.props.country.name}\r\n                onPress={() => this._onChangeCountry(item)}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n                <FlatList\r\n                    data={this.state.countries}\r\n                    renderItem={this._renderItem}\r\n                />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {us} = state;\r\n    return {\r\n        country:us.country\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Countries);\r\n"]},"metadata":{},"sourceType":"script"}