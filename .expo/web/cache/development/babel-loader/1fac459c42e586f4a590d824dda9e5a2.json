{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setDate = setDate;\nexports.setSmokingCountPerDay = setSmokingCountPerDay;\nexports.setCountCigaretteInPocket = setCountCigaretteInPocket;\nexports.setWasteTime = setWasteTime;\nexports.setPrice = setPrice;\nexports.setCurrency = setCurrency;\nexports.setHealthNotification = setHealthNotification;\nexports.setAchievementsNotification = setAchievementsNotification;\n\nvar _index = _interopRequireDefault(require(\"./../store/index\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction setDate(date) {\n  _reactNative.AsyncStorage.setItem(\"date\", date);\n\n  _index.default.dispatch({\n    type: 'UPDATE_DATE',\n    payload: {\n      date: date\n    }\n  });\n}\n\nfunction setSmokingCountPerDay(smokingCountPerDay) {\n  _reactNative.AsyncStorage.setItem(\"smokingCountPerDay\", smokingCountPerDay);\n\n  _index.default.dispatch({\n    type: 'UPDATE_SMOKING_COUNT_PER_DAY',\n    payload: {\n      smokingCountPerDay: smokingCountPerDay\n    }\n  });\n}\n\nfunction setCountCigaretteInPocket(countCigaretteInPocket) {\n  _reactNative.AsyncStorage.setItem(\"countCigaretteInPocket\", countCigaretteInPocket);\n\n  _index.default.dispatch({\n    type: 'UPDATE_COUNT_CIGARETTE_IN_POCKET',\n    payload: {\n      countCigaretteInPocket: countCigaretteInPocket\n    }\n  });\n}\n\nfunction setWasteTime(wasteTime) {\n  _reactNative.AsyncStorage.setItem(\"wasteTime\", wasteTime);\n\n  _index.default.dispatch({\n    type: 'UPDATE_WASTE_TIME',\n    payload: {\n      wasteTime: wasteTime\n    }\n  });\n}\n\nfunction setPrice(price) {\n  _reactNative.AsyncStorage.setItem(\"price\", price);\n\n  _index.default.dispatch({\n    type: 'UPDATE_PRICE',\n    payload: {\n      price: price\n    }\n  });\n}\n\nfunction setCurrency(currency) {\n  _reactNative.AsyncStorage.setItem(\"currency\", currency);\n\n  _index.default.dispatch({\n    type: 'UPDATE_CURRENCY',\n    payload: {\n      currency: currency\n    }\n  });\n}\n\nfunction setHealthNotification(healthNotification) {\n  _reactNative.AsyncStorage.setItem(\"healthNotification\", healthNotification);\n\n  _index.default.dispatch({\n    type: 'UPDATE_HEALTH_NOTIFICATION',\n    payload: {\n      healthNotification: healthNotification\n    }\n  });\n}\n\nfunction setAchievementsNotification(achievementsNotification) {\n  _reactNative.AsyncStorage.setItem(\"achievementsNotification\", achievementsNotification);\n\n  _index.default.dispatch({\n    type: 'UPDATE_ACHIEVEMENT_NOTIFICATION',\n    payload: {\n      achievementsNotification: achievementsNotification\n    }\n  });\n}\n\n_reactNative.AsyncStorage.multiGet([\"date\", \"smokingCountPerDay\", \"countCigaretteInPocket\", \"wasteTime\", \"price\", \"country\", \"currency\", \"healthNotification\", \"achievementsNotification\"]).then(function (result) {\n  setDate(result[0][1] === null || result[0][1] === \"\" ? new Date(Date.now()) : result[0][1]);\n  setSmokingCountPerDay(result[1][1] === null || result[1][1] === \"\" ? 20 : result[1][1]);\n  setCountCigaretteInPocket(result[2][1] === null || result[2][1] === \"\" ? 20 : result[2][1]);\n  setWasteTime(result[3][1] === null || result[3][1] === \"\" ? 4 : result[3][1]);\n  setPrice(result[4][1] === null || result[4][1] === \"\" ? 18 : result[4][1]);\n\n  if (result[6][1] === null) {\n    setCurrency(\"$\");\n  } else {\n    setCurrency(result[6][1]);\n  }\n\n  if (result[7][1] == null) {\n    setHealthNotification(JSON.stringify(true));\n  } else {\n    setHealthNotification(result[7][1]);\n  }\n\n  if (result[8][1] == null) {\n    setAchievementsNotification(JSON.stringify(true));\n  } else {\n    setAchievementsNotification(result[8][1]);\n  }\n});","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/state/actions/UserInformation.js"],"names":["setDate","date","AsyncStorage","setItem","store","dispatch","type","payload","setSmokingCountPerDay","smokingCountPerDay","setCountCigaretteInPocket","countCigaretteInPocket","setWasteTime","wasteTime","setPrice","price","setCurrency","currency","setHealthNotification","healthNotification","setAchievementsNotification","achievementsNotification","multiGet","then","result","Date","now","JSON","stringify"],"mappings":"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","sourcesContent":["import store from './../store/index';\r\nimport {AsyncStorage} from 'react-native';\r\nexport function setDate(date) {\r\n    AsyncStorage.setItem(\"date\",date);\r\n    store.dispatch({\r\n        type: 'UPDATE_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport function setSmokingCountPerDay(smokingCountPerDay) {\r\n    AsyncStorage.setItem(\"smokingCountPerDay\",smokingCountPerDay);\r\n    store.dispatch({\r\n        type: 'UPDATE_SMOKING_COUNT_PER_DAY',\r\n        payload: {\r\n            smokingCountPerDay\r\n        }\r\n    });\r\n}\r\n\r\nexport function setCountCigaretteInPocket(countCigaretteInPocket) {\r\n    AsyncStorage.setItem(\"countCigaretteInPocket\",countCigaretteInPocket);\r\n    store.dispatch({\r\n        type: 'UPDATE_COUNT_CIGARETTE_IN_POCKET',\r\n        payload: {\r\n            countCigaretteInPocket\r\n        }\r\n    })\r\n}\r\n\r\nexport function setWasteTime(wasteTime) {\r\n    AsyncStorage.setItem(\"wasteTime\",wasteTime);\r\n    store.dispatch({\r\n        type: 'UPDATE_WASTE_TIME',\r\n        payload: {\r\n            wasteTime\r\n        }\r\n    })\r\n}\r\n\r\nexport function setPrice(price) {\r\n    AsyncStorage.setItem(\"price\",price);\r\n    store.dispatch({\r\n        type: 'UPDATE_PRICE',\r\n        payload: {\r\n            price\r\n        }\r\n    })\r\n}\r\n\r\nexport function setCurrency(currency) {\r\n    AsyncStorage.setItem(\"currency\",currency);\r\n    store.dispatch({\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: {\r\n            currency\r\n        }\r\n    })\r\n}\r\n\r\nexport function setHealthNotification(healthNotification) {\r\n    AsyncStorage.setItem(\"healthNotification\",healthNotification);\r\n    store.dispatch({\r\n        type: 'UPDATE_HEALTH_NOTIFICATION',\r\n        payload: {\r\n            healthNotification\r\n        }\r\n    })\r\n}\r\nexport function setAchievementsNotification(achievementsNotification) {\r\n    AsyncStorage.setItem(\"achievementsNotification\",achievementsNotification);\r\n    store.dispatch({\r\n        type: 'UPDATE_ACHIEVEMENT_NOTIFICATION',\r\n        payload: {\r\n            achievementsNotification\r\n        }\r\n    })\r\n}\r\n\r\n\r\nAsyncStorage.multiGet([\"date\",\"smokingCountPerDay\",\"countCigaretteInPocket\",\"wasteTime\",\"price\",\"country\",\"currency\",\"healthNotification\",\"achievementsNotification\"]).then((result)=>{\r\n    setDate((result[0][1] === null || result[0][1] ===\"\" ? (new Date(Date.now())): result[0][1]));\r\n    setSmokingCountPerDay((result[1][1] === null || result[1][1] ===\"\" ? 20 : result[1][1]));\r\n    setCountCigaretteInPocket((result[2][1] === null || result[2][1] ===\"\" ? 20 : result[2][1]));\r\n    setWasteTime((result[3][1] === null || result[3][1] ===\"\" ? 4 : result[3][1]));\r\n    setPrice((result[4][1] === null || result[4][1] ===\"\" ? 18 : result[4][1]));\r\n\r\n    if(result[6][1] === null) {\r\n        setCurrency(\"$\");\r\n    } else\r\n    {\r\n        setCurrency(result[6][1]);\r\n    }\r\n\r\n\r\n    if(result[7][1] == null) {\r\n        setHealthNotification(JSON.stringify(true));\r\n    } else {\r\n        setHealthNotification(result[7][1]);\r\n    }\r\n\r\n    if(result[8][1] == null) {\r\n        setAchievementsNotification(JSON.stringify(true));\r\n    }else\r\n    {\r\n        setAchievementsNotification(result[8][1]);\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}