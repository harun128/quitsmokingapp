{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../../components/UI/Text\"));\n\nvar _ConfirmDialog = _interopRequireDefault(require(\"react-native-simple-dialogs/src/ConfirmDialog\"));\n\nvar UserInformationAction = _interopRequireWildcard(require(\"./../../state/actions/UserInformation\"));\n\nvar _HealthNotifications = _interopRequireDefault(require(\"../../utils/HealthNotifications\"));\n\nvar _AchievementsList = _interopRequireDefault(require(\"../../config/AchievementsList\"));\n\nvar _UserSession = require(\"../../state/actions/UserSession\");\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Settings\\\\Settings.js\";\n\nvar Settings = function Settings(props) {\n  var navigation = props.navigation,\n      route = props.route;\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      confirm = _React$useState2[0],\n      setAlert = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      dialogVisible = _React$useState4[0],\n      setDialogVisible = _React$useState4[1];\n\n  var _React$useState5 = _react.default.useState(false),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      confirmLogout = _React$useState6[0],\n      setLogoutAlert = _React$useState6[1];\n\n  var _React$useState7 = _react.default.useState(false),\n      _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n      logoutVisible = _React$useState8[0],\n      setLogoutDialogVisible = _React$useState8[1];\n\n  navigation.setOptions({\n    title: _18n.default.t(\"settings.titles.settings\"),\n    headerStyle: {\n      elevation: 0,\n      shadowOpacity: 0,\n      height: 45\n    },\n    headerTitleStyle: {\n      fontWeight: 'normal',\n      fontSize: 17\n    }\n  });\n\n  var showAlert = function showAlert() {\n    setAlert(true);\n  };\n\n  var hideAlert = function hideAlert() {};\n\n  _react.default.useEffect(function () {\n    navigation.addListener(\"focus\", function () {\n      _reactNative.StatusBar.setBarStyle('dark-content');\n\n      _reactNative.StatusBar.setBackgroundColor('#ccc');\n    });\n  });\n\n  function againStart() {\n    var hn, an;\n    return _regenerator.default.async(function againStart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setAlert(false);\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.AsyncStorage.setItem(\"date\", new Date(Date.now()).toString()));\n\n          case 3:\n            UserInformationAction.setDate(new Date(Date.now()).toString());\n            hn = new _HealthNotifications.default(new Date(Date.now()).toString());\n            hn.setScheduled();\n            an = new _AchievementsList.default(new Date(Date.now()).toString(), props.smokingCountPerDay, props.countCigaretteInPocket, props.price, props.currency);\n            an.setScheduled();\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Box.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_Text.default, {\n    py: 20,\n    ml: 2,\n    color: '#2D3E50',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, _18n.default.t(\"settings.titles.application_settings\")), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.item,\n    onPress: function onPress() {\n      return navigation.navigate(\"SetSettings\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.informations\"))), _react.default.createElement(_Box.default, {\n    mx: 3,\n    bg: '#ddd',\n    height: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.item,\n    onPress: function onPress() {\n      return showAlert(\"dede\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.start_over\")), _react.default.createElement(_ConfirmDialog.default, {\n    title: _18n.default.t(\"settings.will_reset\"),\n    message: _18n.default.t(\"settings.are_you_sure\"),\n    visible: confirm,\n    onTouchOutside: function onTouchOutside() {\n      return setDialogVisible(false);\n    },\n    positiveButton: {\n      title: _18n.default.t(\"yes\"),\n      onPress: function onPress() {\n        againStart().then(function (r) {\n          alert(_18n.default.t(\"settings.reset_success\"));\n        });\n      }\n    },\n    negativeButton: {\n      title: _18n.default.t(\"no\"),\n      onPress: function onPress() {\n        setAlert(false);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }))), _react.default.createElement(_Text.default, {\n    py: 20,\n    ml: 2,\n    color: '#2D3E50',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, _18n.default.t(\"settings.titles.preferences_permissions\")), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.item,\n    onPress: function onPress() {\n      return navigation.navigate(\"NotificationSettings\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.notifications\"))), _react.default.createElement(_Box.default, {\n    mx: 3,\n    bg: '#ddd',\n    height: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"CurrencyScreen\");\n    },\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.currency\")))), _react.default.createElement(_Text.default, {\n    py: 20,\n    ml: 2,\n    color: '#2D3E50',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, _18n.default.t(\"settings.titles.community\")), _react.default.createElement(_Box.default, {\n    bg: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, props.token !== null && _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return setLogoutAlert(true);\n    },\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.logout\")), _react.default.createElement(_ConfirmDialog.default, {\n    title: _18n.default.t(\"settings.will_logout\"),\n    message: _18n.default.t(\"settings.are_you_sure\"),\n    visible: confirmLogout,\n    onTouchOutside: function onTouchOutside() {\n      return setLogoutDialogVisible(false);\n    },\n    positiveButton: {\n      title: _18n.default.t(\"yes\"),\n      onPress: function onPress() {\n        setLogoutAlert(false);\n        (0, _UserSession.setToken)(null);\n        (0, _UserSession.setEmail)(\"\");\n        (0, _UserSession.setImage)(\"default.png\");\n        (0, _UserSession.setUserName)(\"\");\n        (0, _UserSession.setUserId)(\"\");\n        (0, _UserSession.setProfileDescription)(\"\");\n        (0, _UserSession.setLocation)(\"\");\n        alert(_18n.default.t(\"settings.logout_success\"));\n      }\n    },\n    negativeButton: {\n      title: _18n.default.t(\"no\"),\n      onPress: function onPress() {\n        setLogoutAlert(false);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), (props.token === null || props.token === \"null\") && _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"CommunityScreen\");\n    },\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_Text.default, {\n    ml: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, _18n.default.t(\"settings.titles.login\"))))));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  item: {\n    paddingVertical: 10\n  },\n  bottomLine: {\n    borderBottomWidth: 1,\n    marginLeft: 3,\n    backgroundColor: '#ddd'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  button: {\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 7,\n    borderRadius: 5,\n    backgroundColor: \"#AEDEF4\"\n  },\n  text: {\n    color: '#fff',\n    fontSize: 15\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var ui = state.ui,\n      us = state.us;\n  return {\n    date: ui.date,\n    wasteTime: ui.wasteTime,\n    smokingCountPerDay: ui.smokingCountPerDay,\n    countCigaretteInPocket: ui.countCigaretteInPocket,\n    price: ui.price,\n    token: us.token,\n    currency: ui.currency\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(Settings);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Settings/Settings.js"],"names":["Settings","props","navigation","route","React","useState","confirm","setAlert","dialogVisible","setDialogVisible","confirmLogout","setLogoutAlert","logoutVisible","setLogoutDialogVisible","setOptions","title","I18n","t","headerStyle","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","showAlert","hideAlert","useEffect","addListener","StatusBar","setBarStyle","setBackgroundColor","againStart","AsyncStorage","setItem","Date","now","toString","UserInformationAction","setDate","hn","HealthNotifications","setScheduled","an","AchievementsList","smokingCountPerDay","countCigaretteInPocket","price","currency","styles","item","navigate","onPress","then","r","alert","token","StyleSheet","create","paddingVertical","bottomLine","borderBottomWidth","marginLeft","backgroundColor","container","flex","alignItems","justifyContent","button","margin","paddingHorizontal","borderRadius","text","color","mapStateToProps","state","ui","us","date","wasteTime"],"mappings":"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","sourcesContent":["import React from'react'\r\nimport {\r\n    TouchableOpacity,\r\n    SafeAreaView,\r\n    StyleSheet,\r\n    AsyncStorage, StatusBar\r\n} from 'react-native';\r\n\r\nimport Box from \"../../components/UI/Box\";\r\nimport Text from \"../../components/UI/Text\";\r\n\r\nimport ConfirmDialog from \"react-native-simple-dialogs/src/ConfirmDialog\";\r\nimport * as UserInformationAction from './../../state/actions/UserInformation'\r\n\r\nimport HealthNotifications from \"../../utils/HealthNotifications\";\r\nimport AchievementsList from \"../../config/AchievementsList\";\r\n\r\nimport {setToken,setEmail,setProfileDescription,setUserId,setUserName,setLocation,setImage} from \"../../state/actions/UserSession\";\r\nimport I18n from './../../lang/_18n';\r\nimport {connect} from 'react-redux';\r\nconst Settings = (props) => {\r\n    const {navigation,route} = props;\r\n\r\n    const [confirm,setAlert] = React.useState(false);\r\n    const [dialogVisible,setDialogVisible] = React.useState(false);\r\n\r\n    const [confirmLogout,setLogoutAlert] = React.useState(false);\r\n    const [logoutVisible,setLogoutDialogVisible] = React.useState(false);\r\n       navigation.setOptions({\r\n           title:I18n.t(\"settings.titles.settings\"),\r\n           headerStyle : {\r\n               elevation: 0,       //remove shadow on Android\r\n               shadowOpacity: 0,\r\n               height:45,\r\n           },\r\n           headerTitleStyle: {\r\n               fontWeight: 'normal',\r\n               fontSize:17,\r\n           },\r\n       });\r\n    const showAlert = () => {\r\n        setAlert(true);\r\n\r\n    };\r\n\r\n    const hideAlert = () => {\r\n\r\n    };\r\n    React.useEffect(() => {\r\n\r\n        navigation.addListener(\"focus\",()=>{\r\n            StatusBar.setBarStyle('dark-content');\r\n            StatusBar.setBackgroundColor('#ccc');\r\n        });\r\n    });\r\n\r\n    async function againStart(){\r\n        setAlert(false);\r\n        await AsyncStorage.setItem(\"date\", (new Date(Date.now()).toString()));\r\n        UserInformationAction.setDate((new Date(Date.now()).toString()));\r\n        let hn = new HealthNotifications((new Date(Date.now()).toString()));\r\n        hn.setScheduled();\r\n        let an = new AchievementsList((new Date(Date.now()).toString()),props.smokingCountPerDay,props.countCigaretteInPocket,props.price,props.currency);\r\n        an.setScheduled();\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <Box>\r\n                <Text py={20} ml={2} color={'#2D3E50'}>{I18n.t(\"settings.titles.application_settings\")}</Text>\r\n                <Box bg={'white'}>\r\n                    <TouchableOpacity  style={styles.item}  onPress={() => navigation.navigate(\"SetSettings\")}>\r\n                        <Text ml={3}>{I18n.t(\"settings.titles.informations\")}</Text>\r\n                    </TouchableOpacity>\r\n                    <Box mx={3} bg={'#ddd'} height={1} ></Box>\r\n\r\n                    <TouchableOpacity style={styles.item} onPress={() => showAlert(\"dede\")}>\r\n                        <Text ml={3} >{I18n.t(\"settings.titles.start_over\")}</Text>\r\n                        <ConfirmDialog\r\n                            title={I18n.t(\"settings.will_reset\")}\r\n                            message={I18n.t(\"settings.are_you_sure\")}\r\n                            visible={confirm}\r\n                            onTouchOutside={() => setDialogVisible(false)}\r\n                            positiveButton={{\r\n                                title: I18n.t(\"yes\"),\r\n                                onPress: () => {\r\n                                     againStart().then(r => {\r\n                                         alert(I18n.t(\"settings.reset_success\"));\r\n                                     });\r\n\r\n\r\n                                }\r\n\r\n                            }}\r\n                            negativeButton={{\r\n                                title: I18n.t(\"no\"),\r\n                                onPress: () => {\r\n                                    setAlert(false);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </Box>\r\n\r\n                <Text py={20} ml={2} color={'#2D3E50'}>{I18n.t(\"settings.titles.preferences_permissions\")}</Text>\r\n                <Box bg={'white'}>\r\n                    <TouchableOpacity  style={styles.item} onPress={() => navigation.navigate(\"NotificationSettings\")} >\r\n                        <Text ml={3}>{I18n.t(\"settings.titles.notifications\")}</Text>\r\n                    </TouchableOpacity>\r\n                    <Box mx={3} bg={'#ddd'} height={1} ></Box>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"CurrencyScreen\")} style={styles.item}>\r\n                        <Text ml={3}>{I18n.t(\"settings.titles.currency\")}</Text>\r\n                    </TouchableOpacity>\r\n                </Box>\r\n\r\n                <Text py={20} ml={2} color={'#2D3E50'}>{I18n.t(\"settings.titles.community\")}</Text>\r\n                <Box bg={'white'}>\r\n                    {props.token !== null &&\r\n                    <TouchableOpacity onPress={() => setLogoutAlert(true)}  style={styles.item} >\r\n                        <Text ml={3}>{I18n.t(\"settings.titles.logout\")}</Text>\r\n                        <ConfirmDialog\r\n                            title={I18n.t(\"settings.will_logout\")}\r\n                            message={I18n.t(\"settings.are_you_sure\")}\r\n                            visible={confirmLogout}\r\n                            onTouchOutside={() => setLogoutDialogVisible(false)}\r\n                            positiveButton={{\r\n                                title: I18n.t(\"yes\"),\r\n                                onPress: () => {\r\n                                    setLogoutAlert(false);\r\n                                    setToken(null);\r\n                                    setEmail(\"\");\r\n                                    setImage(\"default.png\");\r\n                                    setUserName(\"\");\r\n                                    setUserId(\"\");\r\n                                    setProfileDescription(\"\")\r\n                                    setLocation(\"\");\r\n                                    alert(I18n.t(\"settings.logout_success\"));\r\n                                }\r\n\r\n                            }}\r\n                            negativeButton={{\r\n                                title: I18n.t(\"no\"),\r\n                                onPress: () => {\r\n                                    setLogoutAlert(false);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    }\r\n                    {(props.token === null || props.token === \"null\") &&\r\n                    <TouchableOpacity onPress={() => {navigation.navigate(\"CommunityScreen\")}}  style={styles.item}>\r\n                        <Text ml={3}>{I18n.t(\"settings.titles.login\")}</Text>\r\n                    </TouchableOpacity>\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles= StyleSheet.create({\r\n    item : {\r\n        paddingVertical:10\r\n    },\r\n    bottomLine : {\r\n        borderBottomWidth:1,\r\n        marginLeft:3,\r\n        backgroundColor:'#ddd'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    button: {\r\n        margin: 10,\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 7,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#AEDEF4\",\r\n    },\r\n    text: {\r\n        color: '#fff',\r\n        fontSize: 15\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {ui,us} = state;\r\n    return {\r\n        date: ui.date,\r\n        wasteTime: ui.wasteTime,\r\n        smokingCountPerDay: ui.smokingCountPerDay,\r\n        countCigaretteInPocket: ui.countCigaretteInPocket,\r\n        price: ui.price,\r\n        token: us.token,\r\n        currency : ui.currency,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Settings);\r\n"]},"metadata":{},"sourceType":"script"}