{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar INITIAL_STATE = {\n  date: '',\n  smokingCountPerDay: '',\n  countCigaretteInPocket: '',\n  wasteTime: '',\n  price: '',\n  currency: '',\n  healthNotification: '',\n  achievementsNotification: ''\n};\n\nvar UserInformation = function UserInformation() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_DATE':\n      return (0, _extends2.default)({}, state, {\n        date: action.payload.date\n      });\n      break;\n\n    case 'UPDATE_SMOKING_COUNT_PER_DAY':\n      return (0, _extends2.default)({}, state, {\n        smokingCountPerDay: action.payload.smokingCountPerDay\n      });\n      break;\n\n    case 'UPDATE_COUNT_CIGARETTE_IN_POCKET':\n      return (0, _extends2.default)({}, state, {\n        countCigaretteInPocket: action.payload.countCigaretteInPocket\n      });\n      break;\n\n    case 'UPDATE_WASTE_TIME':\n      return (0, _extends2.default)({}, state, {\n        wasteTime: action.payload.wasteTime\n      });\n      break;\n\n    case 'UPDATE_PRICE':\n      return (0, _extends2.default)({}, state, {\n        price: action.payload.price\n      });\n      break;\n\n    case 'UPDATE_CURRENCY':\n      return (0, _extends2.default)({}, state, {\n        currency: action.payload.currency\n      });\n      break;\n\n    case 'UPDATE_HEALTH_NOTIFICATION':\n      return (0, _extends2.default)({}, state, {\n        healthNotification: action.payload.healthNotification\n      });\n      break;\n\n    case 'UPDATE_ACHIEVEMENT_NOTIFICATION':\n      return (0, _extends2.default)({}, state, {\n        achievementsNotification: action.payload.achievementsNotification\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nvar _default = UserInformation;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/state/reducers/UserInformation.js"],"names":["INITIAL_STATE","date","smokingCountPerDay","countCigaretteInPocket","wasteTime","price","currency","healthNotification","achievementsNotification","UserInformation","state","action","type","payload"],"mappings":";;;;;;;;;AAAA,IAAMA,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAG,EADW;AAElBC,EAAAA,kBAAkB,EAAG,EAFH;AAGlBC,EAAAA,sBAAsB,EAAG,EAHP;AAIlBC,EAAAA,SAAS,EAAG,EAJM;AAKlBC,EAAAA,KAAK,EAAG,EALU;AAMlBC,EAAAA,QAAQ,EAAG,EANO;AAOlBC,EAAAA,kBAAkB,EAAE,EAPF;AAQlBC,EAAAA,wBAAwB,EAAE;AARR,CAAtB;;AAWA,IAAOC,eAAe,GAAG,SAAlBA,eAAkB,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBV,aAAyB;AAAA,MAAXW,MAAW;;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO,uBAAc,EAAd,EAAiBF,KAAjB,EAAuB;AAACT,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAAP,CAAeZ;AAAtB,OAAvB,CAAP;AACJ;;AACA,SAAK,8BAAL;AACI,aAAO,uBAAc,EAAd,EAAiBS,KAAjB,EAAuB;AAACR,QAAAA,kBAAkB,EAAES,MAAM,CAACE,OAAP,CAAeX;AAApC,OAAvB,CAAP;AACJ;;AACA,SAAK,kCAAL;AACI,aAAO,uBAAc,EAAd,EAAiBQ,KAAjB,EAAuB;AAACP,QAAAA,sBAAsB,EAAEQ,MAAM,CAACE,OAAP,CAAeV;AAAxC,OAAvB,CAAP;AACJ;;AACA,SAAK,mBAAL;AACI,aAAO,uBAAc,EAAd,EAAiBO,KAAjB,EAAuB;AAACN,QAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAA3B,OAAvB,CAAP;AACJ;;AACA,SAAK,cAAL;AACI,aAAO,uBAAc,EAAd,EAAiBM,KAAjB,EAAuB;AAACL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAAvB,OAAvB,CAAP;AACJ;;AACA,SAAK,iBAAL;AACI,aAAO,uBAAc,EAAd,EAAiBK,KAAjB,EAAuB;AAACJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAA1B,OAAvB,CAAP;AACJ;;AACA,SAAK,4BAAL;AACI,aAAO,uBAAc,EAAd,EAAiBI,KAAjB,EAAuB;AAACH,QAAAA,kBAAkB,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAApC,OAAvB,CAAP;AACJ;;AACA,SAAK,iCAAL;AACI,aAAO,uBAAc,EAAd,EAAiBG,KAAjB,EAAuB;AAACF,QAAAA,wBAAwB,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAA1C,OAAvB,CAAP;AACJ;;AACA;AACI,aAAOE,KAAP;AA1BR;AA4BH,CA9BD;;eAgCeD,e","sourcesContent":["const INITIAL_STATE = {\r\n    date : '',\r\n    smokingCountPerDay : '',\r\n    countCigaretteInPocket : '',\r\n    wasteTime : '',\r\n    price : '',\r\n    currency : '',\r\n    healthNotification: '',\r\n    achievementsNotification: '',\r\n}\r\n\r\nconst  UserInformation = (state=INITIAL_STATE,action) => {\r\n\r\n    switch (action.type) {\r\n        case 'UPDATE_DATE':\r\n            return Object.assign({},state,{date: action.payload.date});\r\n        break;\r\n        case 'UPDATE_SMOKING_COUNT_PER_DAY':\r\n            return Object.assign({},state,{smokingCountPerDay: action.payload.smokingCountPerDay});\r\n        break;\r\n        case 'UPDATE_COUNT_CIGARETTE_IN_POCKET':\r\n            return Object.assign({},state,{countCigaretteInPocket: action.payload.countCigaretteInPocket});\r\n        break;\r\n        case 'UPDATE_WASTE_TIME':\r\n            return Object.assign({},state,{wasteTime: action.payload.wasteTime});\r\n        break;\r\n        case 'UPDATE_PRICE':\r\n            return Object.assign({},state,{price: action.payload.price});\r\n        break;\r\n        case 'UPDATE_CURRENCY':\r\n            return Object.assign({},state,{currency: action.payload.currency});\r\n        break;\r\n        case 'UPDATE_HEALTH_NOTIFICATION':\r\n            return Object.assign({},state,{healthNotification: action.payload.healthNotification});\r\n        break;\r\n        case 'UPDATE_ACHIEVEMENT_NOTIFICATION':\r\n            return Object.assign({},state,{achievementsNotification: action.payload.achievementsNotification});\r\n        break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default UserInformation;\r\n"]},"metadata":{},"sourceType":"script"}