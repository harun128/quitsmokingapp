{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../components/UI/Box\"));\n\nvar _HealthConditions = require(\"../../config/HealthConditions\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _HealthItem = _interopRequireDefault(require(\"./../../components/CustomLists/HealthItem\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _18n = _interopRequireDefault(require(\"./../../lang/_18n\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\screens\\\\Health\\\\HealthScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HealthScreen = function (_React$Component) {\n  (0, _inherits2.default)(HealthScreen, _React$Component);\n\n  var _super = _createSuper(HealthScreen);\n\n  function HealthScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, HealthScreen);\n    _this = _super.call(this, props);\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return _react.default.createElement(_HealthItem.default, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"HealthConditionScreen\", {\n            id: item.id\n          });\n        },\n        date: _this.props.date,\n        time: item.time,\n        needTime: item.needTime,\n        condition: item.condition,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.props.navigation.setOptions({\n      headerTitle: _18n.default.t(\"health.title\"),\n      headerStyle: {\n        backgroundColor: '#E84C3D',\n        elevation: 0,\n        shadowOpacity: 0,\n        height: 45\n      },\n      headerTitleStyle: {\n        fontWeight: 'normal',\n        fontSize: 17,\n        alignSelf: 'center'\n      },\n      headerTintColor: '#fff',\n      headerRight: function headerRight() {\n        return _react.default.createElement(_Box.default, {\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(HealthScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: \"#E84C3D\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.FlatList, {\n        data: _HealthConditions.HealthConditions,\n        renderItem: this._renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return HealthScreen;\n}(_react.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var ui = state.ui;\n  return {\n    date: ui.date\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps)(HealthScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/screens/Health/HealthScreen.js"],"names":["HealthScreen","props","_renderItem","item","index","navigation","navigate","id","date","time","needTime","condition","setOptions","headerTitle","I18n","t","headerStyle","backgroundColor","elevation","shadowOpacity","height","headerTitleStyle","fontWeight","fontSize","alignSelf","headerTintColor","headerRight","HealthConditions","React","Component","mapStateToProps","state","ui"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;IACMA,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,8BAAMA,KAAN;;AADe,UA+BnBC,WA/BmB,GA+BL,gBAAkB;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAXC,KAAW,QAAXA,KAAW;AAC5B,aACI,6BAAC,mBAAD;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKH,KAAL,CAAWI,UAAX,CAAsBC,QAAtB,CAA+B,uBAA/B,EAAuD;AAACC,YAAAA,EAAE,EAACJ,IAAI,CAACI;AAAT,WAAvD,CAAN;AAAA,SAFb;AAGI,QAAA,IAAI,EAAE,MAAKN,KAAL,CAAWO,IAHrB;AAII,QAAA,IAAI,EAAEL,IAAI,CAACM,IAJf;AAKI,QAAA,QAAQ,EAAEN,IAAI,CAACO,QALnB;AAMI,QAAA,SAAS,EAAEP,IAAI,CAACQ,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KA1CkB;;AAEf,UAAKV,KAAL,CAAWI,UAAX,CAAsBO,UAAtB,CAAiC;AACzBC,MAAAA,WAAW,EAACC,aAAKC,CAAL,CAAO,cAAP,CADa;AAEzBC,MAAAA,WAAW,EAAG;AACVC,QAAAA,eAAe,EAAE,SADP;AAEVC,QAAAA,SAAS,EAAE,CAFD;AAGVC,QAAAA,aAAa,EAAE,CAHL;AAIVC,QAAAA,MAAM,EAAC;AAJG,OAFW;AAQzBC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,UAAU,EAAE,QADE;AAEdC,QAAAA,QAAQ,EAAC,EAFK;AAGdC,QAAAA,SAAS,EAAC;AAHI,OARO;AAazBC,MAAAA,eAAe,EAAE,MAbQ;AAczBC,MAAAA,WAAW,EAAE;AAAA,eACT,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA;AAdY,KAAjC;;AAFe;AAqBlB;;;;wCACyB,CAMzB;;;6BAiBO;AACJ,aACI,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,6BAAC,sBAAD;AAAW,QAAA,QAAQ,EAAE,eAArB;AAAsC,QAAA,eAAe,EAAE,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,6BAAC,qBAAD;AACI,QAAA,IAAI,EAAEC,kCADV;AAEI,QAAA,UAAU,EAAE,KAAKzB,WAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;EAzDsB0B,eAAMC,S;;AA4DjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,MACxBC,EADwB,GAClBD,KADkB,CACxBC,EADwB;AAE/B,SAAO;AACHxB,IAAAA,IAAI,EAAEwB,EAAE,CAACxB;AADN,GAAP;AAGH,CALD;;eAOe,yBAAQsB,eAAR,EAAyB9B,YAAzB,C","sourcesContent":["import React from 'react'\r\nimport Box from \"../../components/UI/Box\";\r\n\r\nimport {HealthConditions} from \"../../config/HealthConditions\"\r\nimport {FlatList, SafeAreaView,StatusBar} from \"react-native\";\r\n\r\nimport HealthItem from \"./../../components/CustomLists/HealthItem\"\r\nimport {connect} from \"react-redux\";\r\nimport I18n from \"./../../lang/_18n\";\r\nclass HealthScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.navigation.setOptions({\r\n                headerTitle:I18n.t(\"health.title\"),\r\n                headerStyle : {\r\n                    backgroundColor: '#E84C3D',\r\n                    elevation: 0,       //remove shadow on Android\r\n                    shadowOpacity: 0,\r\n                    height:45,\r\n                },\r\n                headerTitleStyle: {\r\n                    fontWeight: 'normal',\r\n                    fontSize:17,\r\n                    alignSelf:'center'\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerRight :() => (\r\n                    <Box></Box>\r\n                )\r\n            }\r\n        );\r\n    }\r\n    componentDidMount(): void {\r\n        // this.props.navigation.addListener(\"focus\",() => {\r\n        //     StatusBar.setBarStyle('light-content');\r\n        //     StatusBar.setBackgroundColor(\"#E84C3D\");\r\n        // })\r\n\r\n    }\r\n\r\n\r\n    _renderItem = ({item,index}) => {\r\n        return (\r\n            <HealthItem\r\n\r\n                onPress={() => this.props.navigation.navigate(\"HealthConditionScreen\",{id:item.id})}\r\n                date={this.props.date}\r\n                time={item.time}\r\n                needTime={item.needTime}\r\n                condition={item.condition}\r\n            />\r\n            )\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <SafeAreaView>\r\n                <StatusBar barStyle={\"light-content\"} backgroundColor={\"#E84C3D\"}/>\r\n                <FlatList\r\n                    data={HealthConditions}\r\n                    renderItem={this._renderItem}\r\n                />\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {ui} = state;\r\n    return {\r\n        date: ui.date,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HealthScreen);\r\n"]},"metadata":{},"sourceType":"script"}