{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../UI/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../UI/Text\"));\n\nvar _icons = require(\"../../assets/icons\");\n\nvar _CircleProgress = _interopRequireDefault(require(\"../progress/CircleProgress\"));\n\nvar _colors = require(\"../../config/colors\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _HealthConditions = require(\"../../config/HealthConditions\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jsxFileName = \"C:\\\\Projeler\\\\quitsmoking\\\\src\\\\components\\\\mainpage\\\\MainPageHealthStatus.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MainPageHealthStatus = function (_React$Component) {\n  (0, _inherits2.default)(MainPageHealthStatus, _React$Component);\n\n  var _super = _createSuper(MainPageHealthStatus);\n\n  function MainPageHealthStatus(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MainPageHealthStatus);\n    _this = _super.call(this, props);\n    _this.state = {\n      condition: '',\n      percentage: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MainPageHealthStatus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.navigation.addListener(\"focus\", function () {\n        _reactNative.AsyncStorage.getItem(\"date\").then(function (quitDate) {\n          var date = new Date(quitDate).getTime();\n          var now = new Date(Date.now()).getTime();\n\n          _HealthConditions.HealthConditions.some(function (value, index) {\n            var diff = now - (date + value.time);\n\n            if (diff < 0) {\n              var percentage = 100 - 100 * Math.abs(diff) / value.time;\n              _this2.state.percentage = percentage;\n              _this2.state.condition = value;\n\n              _this2.setState({\n                percentage: percentage,\n                condition: value\n              });\n\n              return true;\n            } else {}\n          });\n\n          if (_this2.state.condition === '') {\n            _this2.setState({\n              condition: _HealthConditions.HealthConditions[15],\n              percentage: 100\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state, _this$state2, _this$state2$conditio;\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: .75,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Box.default, {\n        mt: 3,\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Box.default, {\n        borderTopLeftRadius: 7,\n        borderTopRightRadius: 7,\n        height: 35,\n        flexDirection: 'row',\n        bg: '#E84C3D',\n        alignItems: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_icons.Pulse, {\n        width: 25,\n        style: {\n          marginLeft: 10\n        },\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_Text.default, {\n        ml: 10,\n        textAlign: 'center',\n        color: \"white\",\n        fontWeight: 'normal',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, this.props.title))), _react.default.createElement(_Box.default, {\n        flexDirection: 'row',\n        py: 10,\n        bg: 'white',\n        alignItems: 'center',\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_CircleProgress.default, {\n        style: {\n          marginVertical: 5,\n          marginHorizontal: 5\n        },\n        percentage: (_this$state = this.state) == null ? void 0 : _this$state.percentage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_Text.default, {\n        flex: 1,\n        ml: 2,\n        color: _colors.colors.text_color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, (_this$state2 = this.state) == null ? void 0 : (_this$state2$conditio = _this$state2.condition) == null ? void 0 : _this$state2$conditio.condition)));\n    }\n  }]);\n  return MainPageHealthStatus;\n}(_react.default.Component);\n\nMainPageHealthStatus.propTypes = {\n  navigation: _propTypes.default.any,\n  title: _propTypes.default.string\n};\nvar _default = MainPageHealthStatus;\nexports.default = _default;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/src/components/mainpage/MainPageHealthStatus.js"],"names":["MainPageHealthStatus","props","state","condition","percentage","navigation","addListener","AsyncStorage","getItem","then","quitDate","date","Date","getTime","now","HealthConditions","some","value","index","diff","time","Math","abs","setState","onPress","marginLeft","title","marginVertical","marginHorizontal","colors","text_color","React","Component","propTypes","PropTypes","any","string"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Box from \"../UI/Box\";\r\nimport Text from \"../UI/Text\";\r\n\r\nimport {Pulse} from \"../../assets/icons\";\r\nimport CircleProgress from \"../progress/CircleProgress\";\r\nimport {colors} from \"../../config/colors\";\r\nimport {TouchableOpacity,AsyncStorage} from \"react-native\";\r\nimport {HealthConditions} from \"../../config/HealthConditions\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MainPageHealthStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            condition : '',\r\n            percentage:0,\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.navigation.addListener(\"focus\" ,() =>{\r\n            AsyncStorage.getItem(\"date\").then((quitDate) =>{\r\n                let date = new Date(quitDate).getTime();\r\n                let now = (new Date(Date.now())).getTime();\r\n                HealthConditions.some((value,index) => {\r\n                    let diff = now - (date +value.time);\r\n                    if(diff < 0) {\r\n                        let percentage = 100 - ((100* Math.abs(diff))/value.time);\r\n                        this.state.percentage = percentage;\r\n                        this.state.condition = value;\r\n                        this.setState({\r\n                            percentage:percentage,\r\n                            condition:value\r\n                        });\r\n                        return true;\r\n                    }else {\r\n\r\n                    }\r\n                });\r\n                if(this.state.condition === '') {\r\n\r\n                    this.setState({condition:HealthConditions[15],percentage:100});\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TouchableOpacity activeOpacity={.75} onPress={this.props.onPress} >\r\n                <Box mt={3}  borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                    <Box borderTopLeftRadius={7} borderTopRightRadius={7} height={35} flexDirection={'row'} bg={'#E84C3D'}  alignItems={'center'}>\r\n                        <Pulse width={25} style={{marginLeft:10}} color='white'/>\r\n                        <Text  ml={10} textAlign={'center'} color={\"white\"} fontWeight={'normal'} >{this.props.title}</Text>\r\n                    </Box>\r\n                </Box>\r\n                <Box flexDirection={'row'} py={10} bg={'white'}  alignItems={'center'} borderBottomLeftRadius={5} borderBottomRightRadius={5}>\r\n                    <CircleProgress  style={{marginVertical:5, marginHorizontal:5}}  percentage={this.state?.percentage} />\r\n                    <Text flex={1} ml={2} color={colors.text_color}>{this.state?.condition?.condition}</Text>\r\n                </Box>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nMainPageHealthStatus.propTypes = {\r\n    navigation:PropTypes.any,\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default (MainPageHealthStatus);\r\n\r\n"]},"metadata":{},"sourceType":"script"}