{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar RNNotificationsComponent = require('./component');\n\nvar AppState = RNNotificationsComponent.state;\nvar RNNotifications = RNNotificationsComponent.component;\n\nvar Platform = require('react-native').Platform;\n\nvar Notifications = {\n  handler: RNNotifications,\n  onRegister: false,\n  onError: false,\n  onNotification: false,\n  onRemoteFetch: false,\n  isLoaded: false,\n  idInitialNotification: null,\n  isPermissionsRequestPending: false,\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  }\n};\n\nNotifications.callNative = function (name, params) {\n  if (typeof this.handler[name] === 'function') {\n    var _this$handler;\n\n    if (typeof params !== 'array' && typeof params !== 'object') {\n      params = [];\n    }\n\n    return (_this$handler = this.handler)[name].apply(_this$handler, _toConsumableArray(params));\n  } else {\n    return null;\n  }\n};\n\nNotifications.configure = function (options) {\n  if (typeof options.onRegister !== 'undefined') {\n    this.onRegister = options.onRegister;\n  }\n\n  if (typeof options.onError !== 'undefined') {\n    this.onError = options.onError;\n  }\n\n  if (typeof options.onNotification !== 'undefined') {\n    this.onNotification = options.onNotification;\n  }\n\n  if (typeof options.permissions !== 'undefined') {\n    this.permissions = options.permissions;\n  }\n\n  if (typeof options.onRemoteFetch !== 'undefined') {\n    this.onRemoteFetch = options.onRemoteFetch;\n  }\n\n  if (this.isLoaded === false) {\n    this._onRegister = this._onRegister.bind(this);\n    this._onNotification = this._onNotification.bind(this);\n    this._onRemoteFetch = this._onRemoteFetch.bind(this);\n    this.callNative('addEventListener', ['register', this._onRegister]);\n    this.callNative('addEventListener', ['notification', this._onNotification]);\n    this.callNative('addEventListener', ['localNotification', this._onNotification]);\n    Platform.OS === 'android' ? this.callNative('addEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n    this.isLoaded = true;\n  }\n\n  if (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n    this.popInitialNotification(function (firstNotification) {\n      if (firstNotification !== null) {\n        if (this.idInitialNotification === firstNotification.id) {\n          return;\n        }\n\n        this.idInitialNotification = firstNotification.id;\n\n        this._onNotification(firstNotification, true);\n      }\n    }.bind(this));\n  }\n\n  if (options.requestPermissions !== false) {\n    this._requestPermissions();\n  }\n};\n\nNotifications.unregister = function () {\n  this.callNative('removeEventListener', ['register', this._onRegister]);\n  this.callNative('removeEventListener', ['notification', this._onNotification]);\n  this.callNative('removeEventListener', ['localNotification', this._onNotification]);\n  Platform.OS === 'android' ? this.callNative('removeEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n  this.isLoaded = false;\n};\n\nNotifications.localNotification = function (details) {\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n\n    this.handler.presentLocalNotification({\n      alertTitle: details.title,\n      alertBody: details.message,\n      alertAction: details.alertAction,\n      category: details.category,\n      soundName: soundName,\n      applicationIconBadgeNumber: details.number,\n      userInfo: details.userInfo\n    });\n  } else {\n    if (details && typeof details.id === 'number') {\n      if (isNaN(details.id)) {\n        console.warn('NaN value has been passed as id');\n        delete details.id;\n      } else {\n        details.id = '' + details.id;\n      }\n    }\n\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n\n    this.handler.presentLocalNotification(details);\n  }\n};\n\nNotifications.localNotificationSchedule = function (details) {\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n\n    var iosDetails = {\n      fireDate: details.date.toISOString(),\n      alertTitle: details.title,\n      alertBody: details.message,\n      category: details.category,\n      soundName: soundName,\n      userInfo: details.userInfo,\n      repeatInterval: details.repeatType,\n      category: details.category\n    };\n\n    if (details.number) {\n      iosDetails.applicationIconBadgeNumber = parseInt(details.number, 10);\n    }\n\n    if (!details.repeatType || details.repeatType === 'time') {\n      delete iosDetails.repeatInterval;\n    }\n\n    this.handler.scheduleLocalNotification(iosDetails);\n  } else {\n    if (details && typeof details.id === 'number') {\n      if (isNaN(details.id)) {\n        console.warn('NaN value has been passed as id');\n        delete details.id;\n      } else {\n        details.id = '' + details.id;\n      }\n    }\n\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n\n    details.fireDate = details.date.getTime();\n    delete details.date;\n\n    if (['year'].includes(details.repeatType)) {\n      delete details.repeatType;\n    }\n\n    this.handler.scheduleLocalNotification(details);\n  }\n};\n\nNotifications._onRegister = function (token) {\n  if (this.onRegister !== false) {\n    this.onRegister({\n      token: token,\n      os: Platform.OS\n    });\n  }\n};\n\nNotifications._onRemoteFetch = function (notificationData) {\n  if (this.onRemoteFetch !== false) {\n    this.onRemoteFetch(notificationData);\n  }\n};\n\nNotifications._onNotification = function (data) {\n  var isFromBackground = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (isFromBackground === null) {\n    isFromBackground = data.foreground === false || AppState.currentState === 'background';\n  }\n\n  if (this.onNotification !== false) {\n    if (Platform.OS === 'ios') {\n      this.onNotification({\n        foreground: !isFromBackground,\n        userInteraction: isFromBackground,\n        message: data.getMessage(),\n        data: data.getData(),\n        badge: data.getBadgeCount(),\n        alert: data.getAlert(),\n        sound: data.getSound(),\n        finish: function finish(res) {\n          return data.finish(res);\n        }\n      });\n    } else {\n      var notificationData = _objectSpread({\n        foreground: !isFromBackground,\n        finish: function finish() {}\n      }, data);\n\n      if (typeof notificationData.data === 'string') {\n        try {\n          notificationData.data = JSON.parse(notificationData.data);\n        } catch (e) {}\n      }\n\n      this.onNotification(notificationData);\n    }\n  }\n};\n\nNotifications._onPermissionResult = function () {\n  this.isPermissionsRequestPending = false;\n};\n\nNotifications._requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    if (this.isPermissionsRequestPending === false) {\n      this.isPermissionsRequestPending = true;\n      return this.callNative('requestPermissions', [this.permissions]).then(this._onPermissionResult.bind(this)).catch(this._onPermissionResult.bind(this));\n    }\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\n\nNotifications.requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    return this.callNative('requestPermissions', [this.permissions]);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\n\nNotifications.subscribeToTopic = function () {\n  return this.callNative('subscribeToTopic', arguments);\n};\n\nNotifications.unsubscribeFromTopic = function () {\n  return this.callNative('unsubscribeFromTopic', arguments);\n};\n\nNotifications.presentLocalNotification = function () {\n  return this.callNative('presentLocalNotification', arguments);\n};\n\nNotifications.scheduleLocalNotification = function () {\n  return this.callNative('scheduleLocalNotification', arguments);\n};\n\nNotifications.cancelLocalNotifications = function () {\n  return this.callNative('cancelLocalNotifications', arguments);\n};\n\nNotifications.clearLocalNotification = function () {\n  return this.callNative('clearLocalNotification', arguments);\n};\n\nNotifications.cancelAllLocalNotifications = function () {\n  return this.callNative('cancelAllLocalNotifications', arguments);\n};\n\nNotifications.setApplicationIconBadgeNumber = function () {\n  return this.callNative('setApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.getApplicationIconBadgeNumber = function () {\n  return this.callNative('getApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.popInitialNotification = function (handler) {\n  this.callNative('getInitialNotification').then(function (result) {\n    handler(result);\n  });\n};\n\nNotifications.checkPermissions = function () {\n  return this.callNative('checkPermissions', arguments);\n};\n\nNotifications.abandonPermissions = function () {\n  return this.callNative('abandonPermissions', arguments);\n};\n\nNotifications.registerNotificationActions = function () {\n  return this.callNative('registerNotificationActions', arguments);\n};\n\nNotifications.clearAllNotifications = function () {\n  return this.callNative('clearAllNotifications', arguments);\n};\n\nNotifications.removeAllDeliveredNotifications = function () {\n  return this.callNative('removeAllDeliveredNotifications', arguments);\n};\n\nNotifications.getDeliveredNotifications = function () {\n  return this.callNative('getDeliveredNotifications', arguments);\n};\n\nNotifications.removeDeliveredNotifications = function () {\n  return this.callNative('removeDeliveredNotifications', arguments);\n};\n\nmodule.exports = Notifications;","map":{"version":3,"sources":["C:/Projeler/quitsmoking/node_modules/react-native-push-notification/index.js"],"names":["RNNotificationsComponent","require","AppState","state","RNNotifications","component","Platform","Notifications","handler","onRegister","onError","onNotification","onRemoteFetch","isLoaded","idInitialNotification","isPermissionsRequestPending","permissions","alert","badge","sound","callNative","name","params","configure","options","_onRegister","bind","_onNotification","_onRemoteFetch","OS","popInitialNotification","undefined","firstNotification","id","requestPermissions","_requestPermissions","unregister","localNotification","details","soundName","hasOwnProperty","playSound","presentLocalNotification","alertTitle","title","alertBody","message","alertAction","category","applicationIconBadgeNumber","number","userInfo","isNaN","console","warn","localNotificationSchedule","iosDetails","fireDate","date","toISOString","repeatInterval","repeatType","parseInt","scheduleLocalNotification","getTime","includes","token","os","notificationData","data","isFromBackground","foreground","currentState","userInteraction","getMessage","getData","getBadgeCount","getAlert","getSound","finish","res","JSON","parse","e","_onPermissionResult","then","catch","subscribeToTopic","arguments","unsubscribeFromTopic","cancelLocalNotifications","clearLocalNotification","cancelAllLocalNotifications","setApplicationIconBadgeNumber","getApplicationIconBadgeNumber","result","checkPermissions","abandonPermissions","registerNotificationActions","clearAllNotifications","removeAllDeliveredNotifications","getDeliveredNotifications","removeDeliveredNotifications","module","exports"],"mappings":"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","sourcesContent":["/**\n * @providesModule Notifications\n */\n\n'use strict';\n\nvar RNNotificationsComponent = require( './component' );\n\nvar AppState = RNNotificationsComponent.state;\nvar RNNotifications = RNNotificationsComponent.component;\n\nvar Platform = require('react-native').Platform;\n\nvar Notifications = {\n\thandler: RNNotifications,\n\tonRegister: false,\n\tonError: false,\n\tonNotification: false,\n  onRemoteFetch: false,\n\tisLoaded: false,\n\tidInitialNotification: null,\n\n\tisPermissionsRequestPending: false,\n\n\tpermissions: {\n\t\talert: true,\n\t\tbadge: true,\n\t\tsound: true\n\t}\n};\n\nNotifications.callNative = function(name, params) {\n\tif ( typeof this.handler[name] === 'function' ) {\n\t\tif ( typeof params !== 'array' &&\n\t\t\t typeof params !== 'object' ) {\n\t\t\tparams = [];\n\t\t}\n\n\t\treturn this.handler[name](...params);\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n * Configure local and remote notifications\n * @param {Object}\t\toptions\n * @param {function}\toptions.onRegister - Fired when the user registers for remote notifications.\n * @param {function}\toptions.onNotification - Fired when a remote notification is received.\n * @param {function} \toptions.onError - None\n * @param {Object}\t\toptions.permissions - Permissions list\n * @param {Boolean}\t\toptions.requestPermissions - Check permissions when register\n */\nNotifications.configure = function(options) {\n\tif ( typeof options.onRegister !== 'undefined' ) {\n\t\tthis.onRegister = options.onRegister;\n\t}\n\n\tif ( typeof options.onError !== 'undefined' ) {\n\t\tthis.onError = options.onError;\n\t}\n\n\tif ( typeof options.onNotification !== 'undefined' ) {\n\t\tthis.onNotification = options.onNotification;\n\t}\n\n\tif ( typeof options.permissions !== 'undefined' ) {\n\t\tthis.permissions = options.permissions;\n\t}\n\n\tif ( typeof options.onRemoteFetch !== 'undefined' ) {\n\t\tthis.onRemoteFetch = options.onRemoteFetch;\n\t}\n\n\tif ( this.isLoaded === false ) {\n\t\tthis._onRegister = this._onRegister.bind(this);\n\t\tthis._onNotification = this._onNotification.bind(this);\n\t\tthis._onRemoteFetch = this._onRemoteFetch.bind(this);\n\t\tthis.callNative( 'addEventListener', [ 'register', this._onRegister ] );\n\t\tthis.callNative( 'addEventListener', [ 'notification', this._onNotification ] );\n\t\tthis.callNative( 'addEventListener', [ 'localNotification', this._onNotification ] );\n\t\tPlatform.OS === 'android' ? this.callNative( 'addEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n\n\t\tthis.isLoaded = true;\n\t}\n\n\tif (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n\t\tthis.popInitialNotification(function(firstNotification) {\n\t\t\tif ( firstNotification !== null ) {\n        if(this.idInitialNotification === firstNotification.id) {\n          return;\n        }\n        \n        this.idInitialNotification = firstNotification.id;\n        this._onNotification(firstNotification, true);\n\t\t\t}\n    }.bind(this));\n\t}\n\n\tif ( options.requestPermissions !== false ) {\n\t\tthis._requestPermissions();\n\t}\n\n};\n\n/* Unregister */\nNotifications.unregister = function() {\n\tthis.callNative( 'removeEventListener', [ 'register', this._onRegister ] )\n\tthis.callNative( 'removeEventListener', [ 'notification', this._onNotification ] )\n\tthis.callNative( 'removeEventListener', [ 'localNotification', this._onNotification ] )\n\tPlatform.OS === 'android' ? this.callNative( 'removeEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n\tthis.isLoaded = false;\n};\n\n/**\n * Local Notifications\n * @param {Object}\t\tdetails\n * @param {String}\t\tdetails.title  -  The title displayed in the notification alert.\n * @param {String}\t\tdetails.message - The message displayed in the notification alert.\n * @param {String}\t\tdetails.ticker -  ANDROID ONLY: The ticker displayed in the status bar.\n * @param {Object}\t\tdetails.userInfo -  iOS ONLY: The userInfo used in the notification alert.\n */\nNotifications.localNotification = function(details) {\n\tif ( Platform.OS === 'ios' ) {\n\t\t// https://developer.apple.com/reference/uikit/uilocalnotification\n\n\t\tlet soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n\t\tif (details.hasOwnProperty('playSound') && !details.playSound) {\n\t\t\tsoundName = ''; // empty string results in no sound (and no vibration)\n\t\t}\n\n\t\t// for valid fields see: https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/PayloadKeyReference.html\n\t\t// alertTitle only valid for apple watch: https://developer.apple.com/library/ios/documentation/iPhone/Reference/UILocalNotification_Class/#//apple_ref/occ/instp/UILocalNotification/alertTitle\n\n\t\tthis.handler.presentLocalNotification({\n\t\t\talertTitle: details.title,\n\t\t\talertBody: details.message,\n\t\t\talertAction: details.alertAction,\n\t\t\tcategory: details.category,\n\t\t\tsoundName: soundName,\n\t\t\tapplicationIconBadgeNumber: details.number,\n\t\t\tuserInfo: details.userInfo\n\t\t});\n\t} else {\n    if(details && typeof details.id === 'number') {\n      if(isNaN(details.id)) {\n        console.warn('NaN value has been passed as id');\n        delete details.id;\n      }\n      else {\n        details.id = '' + details.id;\n      }\n    }\n\n    if(details && typeof details.number === 'number') {\n      if(isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n  \n  \n\t\tthis.handler.presentLocalNotification(details);\n\t}\n};\n\n/**\n * Local Notifications Schedule\n * @param {Object}\t\tdetails (same as localNotification)\n * @param {Date}\t\tdetails.date - The date and time when the system should deliver the notification\n */\nNotifications.localNotificationSchedule = function(details) {\n\tif ( Platform.OS === 'ios' ) {\n\t\tlet soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n\t\tif (details.hasOwnProperty('playSound') && !details.playSound) {\n\t\t\tsoundName = ''; // empty string results in no sound (and no vibration)\n\t\t}\n\n\t\tconst iosDetails = {\n\t\t\tfireDate: details.date.toISOString(),\n\t\t\talertTitle: details.title,\n\t\t\talertBody: details.message,\n\t\t\tcategory: details.category,\n\t\t\tsoundName: soundName,\n\t\t\tuserInfo: details.userInfo,\n\t\t\trepeatInterval: details.repeatType,\n\t\t\tcategory: details.category,\n\t\t};\n\n\t\tif(details.number) {\n\t\t\tiosDetails.applicationIconBadgeNumber = parseInt(details.number, 10);\n\t\t}\n\n\t\t// ignore Android only repeatType\n\t\tif (!details.repeatType || details.repeatType === 'time') {\n\t\t\tdelete iosDetails.repeatInterval;\n\t\t}\n\t\tthis.handler.scheduleLocalNotification(iosDetails);\n\t} else {\n    if(details && typeof details.id === 'number') {\n      if(isNaN(details.id)) {\n        console.warn('NaN value has been passed as id');\n        delete details.id;\n      }\n      else {\n        details.id = '' + details.id;\n      }\n    }\n\n    if(details && typeof details.number === 'number') {\n      if(isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n  \n\t\tdetails.fireDate = details.date.getTime();\n\t\tdelete details.date;\n\t\t// ignore iOS only repeatType\n\t\tif (['year'].includes(details.repeatType)) {\n\t\t\tdelete details.repeatType;\n\t\t}\n\t\tthis.handler.scheduleLocalNotification(details);\n\t}\n};\n\n/* Internal Functions */\nNotifications._onRegister = function(token) {\n\tif ( this.onRegister !== false ) {\n\t\tthis.onRegister({\n\t\t\ttoken: token,\n\t\t\tos: Platform.OS\n\t\t});\n\t}\n};\n\nNotifications._onRemoteFetch = function(notificationData) {\n\tif ( this.onRemoteFetch !== false ) {\n\t\tthis.onRemoteFetch(notificationData)\n\t}\n};\n\nNotifications._onNotification = function(data, isFromBackground = null) {\n\tif ( isFromBackground === null ) {\n\t\tisFromBackground = (\n\t\t\tdata.foreground === false ||\n\t\t\tAppState.currentState === 'background'\n\t\t);\n\t}\n\n\tif ( this.onNotification !== false ) {\n\t\tif ( Platform.OS === 'ios' ) {\n\t\t\tthis.onNotification({\n\t\t\t\tforeground: ! isFromBackground,\n\t\t\t\tuserInteraction: isFromBackground,\n\t\t\t\tmessage: data.getMessage(),\n\t\t\t\tdata: data.getData(),\n\t\t\t\tbadge: data.getBadgeCount(),\n\t\t\t\talert: data.getAlert(),\n\t\t\t\tsound: data.getSound(),\n  \t\t\tfinish: (res) => data.finish(res)\n\t\t\t});\n\t\t} else {\n\t\t\tvar notificationData = {\n\t\t\t\tforeground: ! isFromBackground,\n  \t\t\tfinish: () => {},\n\t\t\t\t...data\n\t\t\t};\n\n\t\t\tif ( typeof notificationData.data === 'string' ) {\n\t\t\t\ttry {\n\t\t\t\t\tnotificationData.data = JSON.parse(notificationData.data);\n\t\t\t\t} catch(e) {\n\t\t\t\t\t/* void */\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.onNotification(notificationData);\n\t\t}\n\t}\n};\n\n/* onResultPermissionResult */\nNotifications._onPermissionResult = function() {\n\tthis.isPermissionsRequestPending = false;\n};\n\n// Prevent requestPermissions called twice if ios result is pending\nNotifications._requestPermissions = function() {\n\tif ( Platform.OS === 'ios' ) {\n\t\tif ( this.isPermissionsRequestPending === false ) {\n\t\t\tthis.isPermissionsRequestPending = true;\n\t\t\treturn this.callNative( 'requestPermissions', [ this.permissions ])\n\t\t\t\t\t\t\t.then(this._onPermissionResult.bind(this))\n\t\t\t\t\t\t\t.catch(this._onPermissionResult.bind(this));\n\t\t}\n\t} else if (Platform.OS === 'android') {\n\t\treturn this.callNative( 'requestPermissions', []);\n\t}\n};\n\n// Stock requestPermissions function\nNotifications.requestPermissions = function() {\n\tif ( Platform.OS === 'ios' ) {\n\t\treturn this.callNative( 'requestPermissions', [ this.permissions ]);\n\t} else if (Platform.OS === 'android') {\n\t\treturn this.callNative( 'requestPermissions', []);\n\t}\n};\n\n/* Fallback functions */\nNotifications.subscribeToTopic = function() {\n\treturn this.callNative('subscribeToTopic', arguments);\n};\n\nNotifications.unsubscribeFromTopic = function () {\n\treturn this.callNative('unsubscribeFromTopic', arguments);\n};\n\nNotifications.presentLocalNotification = function() {\n\treturn this.callNative('presentLocalNotification', arguments);\n};\n\nNotifications.scheduleLocalNotification = function() {\n\treturn this.callNative('scheduleLocalNotification', arguments);\n};\n\nNotifications.cancelLocalNotifications = function() {\n\treturn this.callNative('cancelLocalNotifications', arguments);\n};\n\nNotifications.clearLocalNotification = function() {\n    return this.callNative('clearLocalNotification', arguments);\n};\n\nNotifications.cancelAllLocalNotifications = function() {\n\treturn this.callNative('cancelAllLocalNotifications', arguments);\n};\n\nNotifications.setApplicationIconBadgeNumber = function() {\n\treturn this.callNative('setApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.getApplicationIconBadgeNumber = function() {\n\treturn this.callNative('getApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.popInitialNotification = function(handler) {\n\tthis.callNative('getInitialNotification').then(function(result){\n\t\thandler(result);\n\t});\n};\n\nNotifications.checkPermissions = function() {\n\treturn this.callNative('checkPermissions', arguments);\n};\n\n/* Abandon Permissions */\nNotifications.abandonPermissions = function() {\n\treturn this.callNative('abandonPermissions', arguments);\n}\n\nNotifications.registerNotificationActions = function() {\n\treturn this.callNative('registerNotificationActions', arguments)\n}\n\nNotifications.clearAllNotifications = function() {\n\t// Only available for Android\n\treturn this.callNative('clearAllNotifications', arguments)\n}\n\nNotifications.removeAllDeliveredNotifications = function() {\n\treturn this.callNative('removeAllDeliveredNotifications', arguments);\n}\n\nNotifications.getDeliveredNotifications = function() {\n\treturn this.callNative('getDeliveredNotifications', arguments);\n}\n\nNotifications.removeDeliveredNotifications = function() {\n\treturn this.callNative('removeDeliveredNotifications', arguments);\n}\n\nmodule.exports = Notifications;\n"]},"metadata":{},"sourceType":"script"}